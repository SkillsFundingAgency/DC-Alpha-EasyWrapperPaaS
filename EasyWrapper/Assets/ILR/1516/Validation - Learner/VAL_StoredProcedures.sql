use [Intrajob_1516]
GO
if object_id('[Rulebase].[VAL_Get_Cases]','p') is not null
	drop procedure [Rulebase].[VAL_Get_Cases]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 04 January 2016 07:48
-- Profile: 1516 Test Harness Validation
-- Rulebase Version: DCSS 1516 Validation Learner 1516, Drop 000, Version 1516.16
-- =====================================================================================================
create procedure [Rulebase].[VAL_Get_Cases] as

	begin
		set nocount on
		select
			CaseData
		from
			[Rulebase].[VAL_Cases]
	end
GO
if object_id('[Rulebase].[VAL_Insert_Cases]','p') is not null
	drop procedure [Rulebase].[VAL_Insert_Cases]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 04 January 2016 07:48
-- Profile: 1516 Test Harness Validation
-- Rulebase Version: DCSS 1516 Validation Learner 1516, Drop 000, Version 1516.16
-- =====================================================================================================
create procedure [Rulebase].[VAL_Insert_Cases] as

	begin
		set nocount on

		insert into
			[Rulebase].[VAL_Cases]
			(
				[Learner_Id],
				CaseData
			)
		select
			ControllingTable.[Learner_Id],
			convert(xml,
				(
					select
						'false' as [@DesktopMode],
						case when [vw_ContractValidation_180].[ukprn] is not null then 'true' else 'false' end as [@FCT_1618APPS1516],
						case when [vw_ContractValidation_181].[ukprn] is not null then 'true' else 'false' end as [@FCT_24PlusALLB1516],
						case when [vw_ContractValidation_182].[ukprn] is not null then 'true' else 'false' end as [@FCT_24PlusALLBC1516],
						case when [vw_ContractValidation_183].[ukprn] is not null then 'true' else 'false' end as [@FCT_ASC1516],
						case when [vw_ContractValidation_184].[ukprn] is not null then 'true' else 'false' end as [@FCT_ASTO1516],
						case when [vw_ContractValidation_185].[ukprn] is not null then 'true' else 'false' end as [@FCT_ESF1420],
						case when [vw_ContractValidation_186].[ukprn] is not null then 'true' else 'false' end as [@FCT_OLASS1516],
						[CollectionDetails].[FilePreparationDate] as [@FilePreparationDate],
						[LARS_Current_Version].[CurrentVersion] as [@LARSVersion],
						[Org_Details].[LegalOrgType] as [@LegalOrgType],
						[Org_Current_Version].[CurrentVersion] as [@OrgVersion],
						[LearningProvider].[UKPRN] as [@UKPRN],
						(
						select
							[Learner].[Accom] as [@Accom],
							[Learner].[ALSCost] as [@ALSCost],
							[Learner].[DateOfBirth] as [@DateOfBirth],
							[Learner].[EngGrade] as [@EngGrade],
							[Learner].[Ethnicity] as [@Ethnicity],
							[Learner].[FamilyName] as [@FamilyName],
							[Learner].[GivenNames] as [@GivenNames],
							[Learner].[LearnRefNumber] as [@LearnRefNumber],
							[Learner].[LLDDHealthProb] as [@LLDDHealthProb],
							[Learner].[MathGrade] as [@MathGrade],
							[Learner].[NINumber] as [@NINumber],
							[Learner].[PlanEEPHours] as [@PlanEEPHours],
							[Learner].[PlanLearnHours] as [@PlanLearnHours],
							[Learner].[PrevLearnRefNumber] as [@PrevLearnRefNumber],
							[Learner].[PrevUKPRN] as [@PrevUKPRN],
							case when [Org_PartnerUKPRN].[UKPRN] is not null then 'true' else 'false' end as [@PrevUKPRNLookup],
							[Learner].[PriorAttain] as [@PriorAttain],
							[Learner].[Sex] as [@Sex],
							[Learner].[ULN] as [@ULN],
							case when [UniqueLearnerNumbers].[ULN] is not null then 'true' else 'false' end as [@ULNLookup],
							(
							select
								[LearningDelivery].[AchDate] as [@AchDate],
								[LearningDelivery].[AddHours] as [@AddHours],
								[LearningDelivery].[AimSeqNumber] as [@AimSeqNumber],
								[LearningDelivery].[AimType] as [@AimType],
								[LARS_LearningDelivery_117].[AwardOrgAimRef] as [@AwardOrgAimRef],
								[LearningDelivery].[CompStatus] as [@CompStatus],
								[LearningDelivery].[ConRefNumber] as [@ConRefNumber],
								case when [vw_ContractAllocation].[contractNumber] is not null then 'true' else 'false' end as [@ConRefNumberValidLookUP],
								[LearningDelivery].[DelLocPostCode] as [@DelLocPostcode],
								case when [Postcodes].[Postcode] is not null then 'true' else 'false' end as [@DelLocPostcodeLookup],
								case when [Org_HMPP_PostCode].[UKPRN] is not null then 'true' else 'false' end as [@DelLocPostcodeOLASSLookup],
								[LearningDelivery].[EmpOutcome] as [@EmpOutcome],
								[LARS_FrameworkAims].[EffectiveTo] as [@FrameworkAimEffectiveTo],
								case when [LARS_FrameworkAims].[FworkCode] is not null then 'true' else 'false' end as [@FrameworkAimLookup],
								[LARS_LearningDelivery_117].[FrameworkCommonComponent] as [@FrameworkCommonComponent],
								case when [LARS_LearningDelivery_188].[FworkCode] is not null then 'true' else 'false' end as [@FrameworkCommonLookup],
								[LARS_FrameworkAims].[FrameworkComponentType] as [@FrameworkComponentType],
								[LARS_Framework_133].[EffectiveTo] as [@FrameworkEffectiveTo],
								case when [LARS_Framework_134].[FworkCode] is not null then 'true' else 'false' end as [@FrameworkLookup],
								[LARS_Framework_132].[EffectiveTo] as [@FrameworkPathwayEffectiveTo],
								case when [LARS_Framework_132].[FworkCode] is not null then 'true' else 'false' end as [@FrameworkPathwayLookup],
								[LearningDelivery].[FundModel] as [@FundModel],
								[LearningDelivery].[FworkCode] as [@FworkCode],
								case when [LARS_LearningDeliveryCategory_TopMostCategory].[CategoryRef] = '9' then 'true' else 'false' end as [@LARS_CategoryRef9],
								[LARS_LearningDelivery_117].[LearnDirectClassSystemCode1] as [@LDCS1Code],
								[LARS_LearningDelivery_117].[LearnDirectClassSystemCode2] as [@LDCS2Code],
								[LARS_LearningDelivery_117].[LearnDirectClassSystemCode3] as [@LDCS3Code],
								[LearningDelivery].[LearnActEndDate] as [@LearnActEndDate],
								[LearningDelivery].[LearnAimRef] as [@LearnAimRef],
								case when [LARS_LearningDelivery_117].[LearnAimRef] is not null then 'true' else 'false' end as [@LearnAimRefLookup],
								[LARS_LearningDelivery_117].[LearnAimRefType] as [@LearnAimRefType],
								[LearningDelivery].[LearnPlanEndDate] as [@LearnPlanEndDate],
								[LearningDelivery].[LearnStartDate] as [@LearnStartDate],
								[LARS_LearningDelivery_117].[NotionalNVQLevelv2] as [@NotionalNVQLevelv2],
								[LearningDelivery].[OrigLearnStartDate] as [@OrigLearnStartDate],
								[LearningDelivery].[OtherFundAdj] as [@OtherFundAdj],
								[LearningDelivery].[Outcome] as [@Outcome],
								[LearningDelivery].[OutGrade] as [@OutGrade],
								[LearningDelivery].[PartnerUKPRN] as [@PartnerUKPRN],
								case when [Org_PartnerUKPRN].[UKPRN] is not null then 'true' else 'false' end as [@PartnerUKPRNLookup],
								[LearningDelivery].[PriorLearnFundAdj] as [@PriorLearnFundAdj],
								[LearningDelivery].[ProgType] as [@ProgType],
								[LearningDelivery].[PwayCode] as [@PwayCode],
								[LARS_Section96].[Section96ApprovalStatus] as [@Section96ApprovalStatus],
								[LARS_Section96].[Section96ReviewDate] as [@Section96ReviewDate],
								[LearningDelivery].[SWSupAimId] as [@SWSupAimId],
								case when [LARS_LearningDelivery_117].[UnemployedOnly]=1 then 'true' when  [LARS_LearningDelivery_117].[UnemployedOnly]=0 then 'false' else null end as [@UnemployedOnly],
								[LARS_LearningDelivery_117].[UnitType] as [@UnitType],
								[LearningDelivery].[WithdrawReason] as [@WithdrawReason],
								(
								select
									[LearningDeliveryFAM].[LearnDelFAMCode] as [@LearnDelFAMCode],
									[LearningDeliveryFAM].[LearnDelFAMDateFrom] as [@LearnDelFAMDateFrom],
									[LearningDeliveryFAM].[LearnDelFAMDateTo] as [@LearnDelFAMDateTo],
									[LearningDeliveryFAM].[LearnDelFAMType] as [@LearnDelFAMType]
								from
									[Intrajob_1516].[Input].[LearningDeliveryFAM]
								where
									[LearningDeliveryFAM].[LearningDelivery_Id] = [LearningDelivery].[LearningDelivery_Id]
								for xml path ('LearningDeliveryFAM'), type
								),
								(
								select
									[LearningDeliveryHE].[DOMICILE] as [@DOMICILE],
									[LearningDeliveryHE].[ELQ] as [@ELQ],
									[LearningDeliveryHE].[FUNDCOMP] as [@FUNDCOMP],
									[LearningDeliveryHE].[FUNDLEV] as [@FUNDLEV],
									[LearningDeliveryHE].[GROSSFEE] as [@GROSSFEE],
									[LearningDeliveryHE].[HEPostCode] as [@HEPostCode],
									case when [Postcodes].[Postcode] is not null then 'true' else 'false' end as [@HEPostCodeLookup],
									[LearningDeliveryHE].[MODESTUD] as [@MODESTUD],
									[LearningDeliveryHE].[MSTUFEE] as [@MSTUFEE],
									[LearningDeliveryHE].[NETFEE] as [@NETFEE],
									[LearningDeliveryHE].[NUMHUS] as [@NUMHUS],
									[LearningDeliveryHE].[PCFLDCS] as [@PCFLDCS],
									[LearningDeliveryHE].[PCOLAB] as [@PCOLAB],
									[LearningDeliveryHE].[PCSLDCS] as [@PCSLDCS],
									[LearningDeliveryHE].[PCTLDCS] as [@PCTLDCS],
									[LearningDeliveryHE].[QUALENT3] as [@QUALENT3],
									[LearningDeliveryHE].[SEC] as [@SEC],
									[LearningDeliveryHE].[SOC2000] as [@SOC2000],
									[LearningDeliveryHE].[SPECFEE] as [@SPECFEE],
									[LearningDeliveryHE].[SSN] as [@SSN],
									[LearningDeliveryHE].[STULOAD] as [@STULOAD],
									[LearningDeliveryHE].[TYPEYR] as [@TYPEYR],
									[LearningDeliveryHE].[UCASAPPID] as [@UCASAPPID]
								from
									[Intrajob_1516].[Input].[LearningDeliveryHE]
									left join [$(Postcodes)].[$(Postcodes_Schema)].[Postcodes]
										on [Postcodes].[Postcode]=[LearningDeliveryHE].[HEPostCode]
								where
									[LearningDeliveryHE].[LearningDelivery_Id] = [LearningDelivery].[LearningDelivery_Id]
								for xml path ('LearningDeliveryHE'), type
								),
								(
								select
									[ProviderSpecDeliveryMonitoring].[ProvSpecDelMon] as [@ProvSpecDelMon],
									[ProviderSpecDeliveryMonitoring].[ProvSpecDelMonOccur] as [@ProvSpecDelMonOccur]
								from
									[Intrajob_1516].[Input].[ProviderSpecDeliveryMonitoring]
								where
									[ProviderSpecDeliveryMonitoring].[LearningDelivery_Id] = [LearningDelivery].[LearningDelivery_Id]
								for xml path ('ProviderSpecDeliveryMonitoring'), type
								),
								(
								select
									[LARS_Validity].[ValidityCategory] as [@ValidityCategory],
									[LARS_Validity].[EndDate] as [@ValidityEndDate],
									[LARS_Validity].[LastNewStartDate] as [@ValidityLastNewStartDate],
									[LARS_Validity].[StartDate] as [@ValidityStartDate]
								from
									[$(LARS)].[$(LARS_Schema)].[LARS_Validity]
								where
									[LARS_Validity].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
								for xml path ('LearningDeliveryLARSValidity'), type
								),
								(
								select
									[LearningDeliveryWorkPlacement].[WorkPlaceEmpId] as [@WorkPlaceEmpId],
									case when [Employers].[URN] is not null then 'true' else 'false' end as [@WorkPlaceEmpIdLookup],
									[LearningDeliveryWorkPlacement].[WorkPlaceEndDate] as [@WorkPlaceEndDate],
									[LearningDeliveryWorkPlacement].[WorkPlaceMode] as [@WorkPlaceMode],
									[LearningDeliveryWorkPlacement].[WorkPlaceStartDate] as [@WorkPlaceStartDate]
								from
									[Intrajob_1516].[Input].[LearningDeliveryWorkPlacement]
									left join [$(EDRS)].[$(EDRS_Schema)].[Employers]
										on [Employers].[URN]=[LearningDeliveryWorkPlacement].[WorkPlaceEmpId]
								where
									[LearningDeliveryWorkPlacement].[LearningDelivery_Id] = [LearningDelivery].[LearningDelivery_Id]
								for xml path ('LearningDeliveryWorkPlacement'), type
								),
								(
								select
									[TrailblazerApprenticeshipFinancialRecord].[TBFinAmount] as [@TBFinAmount],
									[TrailblazerApprenticeshipFinancialRecord].[TBFinCode] as [@TBFinCode],
									[TrailblazerApprenticeshipFinancialRecord].[TBFinDate] as [@TBFinDate],
									[TrailblazerApprenticeshipFinancialRecord].[TBFinType] as [@TBFinType]
								from
									[Intrajob_1516].[Input].[TrailblazerApprenticeshipFinancialRecord]
								where
									[TrailblazerApprenticeshipFinancialRecord].[LearningDelivery_Id] = [LearningDelivery].[LearningDelivery_Id]
								for xml path ('TrailblazerApprenticeshipFinancialRecord'), type
								),
								(
								select
									case when [LARS_AnnualValue].[BasicSkills]=1 then 'true' when  [LARS_AnnualValue].[BasicSkills]=0 then 'false' else null end as [@BasicSkills],
									[LARS_AnnualValue].[FullLevel2EntitlementCategory] as [@FullLevel2EntitlementCategory],
									[LARS_AnnualValue].[FullLevel2Percent] as [@FullLevel2Percent],
									[LARS_AnnualValue].[FullLevel3EntitlementCategory] as [@FullLevel3EntitlementCategory],
									[LARS_AnnualValue].[FullLevel3Percent] as [@FullLevel3Percent],
									[LARS_AnnualValue].[BasicSkillsType] as [@LearnDelAnnValBasicSkillsTypeCode],
									[LARS_AnnualValue].[EffectiveFrom] as [@LearnDelAnnValDateFrom],
									[LARS_AnnualValue].[EffectiveTo] as [@LearnDelAnnValDateTo]
								from
									[$(LARS)].[$(LARS_Schema)].[LARS_AnnualValue]
								where
									[LARS_AnnualValue].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
								for xml path ('LearningDeliveryAnnualValue'), type
								),
								(
								select
									[LARS_LearningDeliveryCategory].[CategoryRef] as [@LARSCategoryRef],
									[LARS_LearningDeliveryCategory_Children].[ParentCategoryRef] as [@ParentLARSCategoryRef],
									[LARS_LearningDeliveryCategory_Children].[RootCategoryRef] as [@TopLevelLARSCategoryRef]
								from
									[$(LARS)].[$(LARS_Schema)].[LARS_LearningDeliveryCategory]
									left join [$(LARS)].[$(LARS_Schema)].[LARS_LearningDeliveryCategory_Children]
										on [LARS_LearningDeliveryCategory_Children].[CategoryRef]=[LARS_LearningDeliveryCategory].[CategoryRef]
								where
									[LARS_LearningDeliveryCategory].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
								for xml path ('LearningDeliveryLARSCategory'), type
								)
							from
								[Intrajob_1516].[Input].[LearningDelivery]
								left join [$(LARS)].[$(LARS_Schema)].[LARS_LearningDelivery] as [LARS_LearningDelivery_117]
									on [LARS_LearningDelivery_117].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
								left join [$(FCT)].[$(FCT_Schema)].[vw_ContractAllocation]
									on [vw_ContractAllocation].[contractAllocationNumber]=[LearningDelivery].[ConRefNumber]
								left join [$(Postcodes)].[$(Postcodes_Schema)].[Postcodes]
									on [Postcodes].[Postcode]=[LearningDelivery].[DelLocPostCode]
								left join [$(Org)].[$(Org_Schema)].[Org_HMPP_PostCode]
									on [Org_HMPP_PostCode].[HMPPPostCode]=[LearningDelivery].[DelLocPostCode]
								left join [$(LARS)].[$(LARS_Schema)].[LARS_FrameworkAims]
									on [LARS_FrameworkAims].[FworkCode]=[LearningDelivery].[FworkCode]
									and [LARS_FrameworkAims].[ProgType]=[LearningDelivery].[ProgType]
									and [LARS_FrameworkAims].[PwayCode]=[LearningDelivery].[PwayCode]
									and [LARS_FrameworkAims].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
								left join [$(LARS)].[$(LARS_Schema)].[LARS_LearningDelivery] as [LARS_LearningDelivery_188]
								left join [$(LARS)].[$(LARS_Schema)].[LARS_FrameworkCmnComp]
									on [LARS_FrameworkCmnComp].[CommonComponent]=[LARS_LearningDelivery].[FrameworkCommonComponent]
									and [LARS_FrameworkCmnComp].[FworkCode]=[LearningDelivery].[FworkCode]
									and [LARS_FrameworkCmnComp].[ProgType]=[LearningDelivery].[ProgType]
									and [LARS_FrameworkCmnComp].[PwayCode]=[LearningDelivery].[PwayCode]
								left join [$(LARS)].[$(LARS_Schema)].[LARS_Framework] as [LARS_Framework_133]
									on [LARS_Framework_133].[FworkCode]=[LearningDelivery].[FworkCode]
									and [LARS_Framework_133].[ProgType]=[LearningDelivery].[ProgType]
									and [LARS_Framework_133].[PwayCode]='0'
								left join
									(
										select distinct
											[FworkCode],
											[ProgType]
										from
											[$(LARS)].[$(LARS_Schema)].[LARS_Framework]
									) as LARS_Framework_134
									on [LARS_Framework_134].[FworkCode]=[LearningDelivery].[FworkCode]
									and [LARS_Framework_134].[ProgType]=[LearningDelivery].[ProgType]
								left join [$(LARS)].[$(LARS_Schema)].[LARS_Framework] as [LARS_Framework_132]
									on [LARS_Framework_132].[FworkCode]=[LearningDelivery].[FworkCode]
									and [LARS_Framework_132].[ProgType]=[LearningDelivery].[ProgType]
									and [LARS_Framework_132].[PwayCode]=[LearningDelivery].[PwayCode]
								left join [$(LARS)].[$(LARS_Schema)].[LARS_LearningDeliveryCategory_TopMostCategory]
									on [LARS_LearningDeliveryCategory_TopMostCategory].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
								left join [$(Org)].[$(Org_Schema)].[Org_PartnerUKPRN]
									on [Org_PartnerUKPRN].[UKPRN]=[Learner].[PrevUKPRN]
								left join [$(LARS)].[$(LARS_Schema)].[LARS_Section96]
									on [LARS_Section96].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
							where
								[LearningDelivery].[Learner_Id] = [Learner].[Learner_Id]
							for xml path ('LearningDelivery'), type
							),
							(
							select
								[LearnerFAM].[LearnFAMCode] as [@LearnFAMCode],
								[LearnerFAM].[LearnFAMType] as [@LearnFAMType]
							from
								[Intrajob_1516].[Input].[LearnerFAM]
							where
								[LearnerFAM].[Learner_Id] = [Learner].[Learner_Id]
							for xml path ('LearnerFAM'), type
							),
							(
							select
								[LearnerEmploymentStatus].[DateEmpStatApp] as [@DateEmpStatApp],
								[LearnerEmploymentStatus].[EmpId] as [@EmpId],
								case when [Employers].[URN] is not null then 'true' else 'false' end as [@EmpIdLookup],
								[LearnerEmploymentStatus].[EmpStat] as [@EmpStat],
								(
								select
									[EmploymentStatusMonitoring].[ESMCode] as [@ESMCode],
									[EmploymentStatusMonitoring].[ESMType] as [@ESMType]
								from
									[Intrajob_1516].[Input].[EmploymentStatusMonitoring]
								where
									[EmploymentStatusMonitoring].[LearnerEmploymentStatus_Id] = [LearnerEmploymentStatus].[LearnerEmploymentStatus_Id]
								for xml path ('EmploymentStatusMonitoring'), type
								)
							from
								[Intrajob_1516].[Input].[LearnerEmploymentStatus]
								left join [$(EDRS)].[$(EDRS_Schema)].[Employers]
									on [Employers].[URN]=[LearnerEmploymentStatus].[EmpId]
							where
								[LearnerEmploymentStatus].[Learner_Id] = [Learner].[Learner_Id]
							for xml path ('LearnerEmploymentStatus'), type
							),
							(
							select
								[LearnerContact].[ContType] as [@ContType],
								[LearnerContact].[Email] as [@Email],
								[LearnerContact].[LocType] as [@LocType],
								[LearnerContact].[PostCode] as [@Postcode],
								case when [Postcodes].[Postcode] is not null then 'true' else 'false' end as [@PostcodeLookup],
								[LearnerContact].[TelNumber] as [@TelNumber],
								(
								select
									[PostAdd].[AddLine1] as [@AddLine1],
									[PostAdd].[AddLine2] as [@AddLine2],
									[PostAdd].[AddLine3] as [@AddLine3],
									[PostAdd].[AddLine4] as [@AddLine4]
								from
									[Intrajob_1516].[Input].[PostAdd]
								where
									[PostAdd].[LearnerContact_Id] = [LearnerContact].[LearnerContact_Id]
								for xml path ('PostAdd'), type
								)
							from
								[Intrajob_1516].[Input].[LearnerContact]
								left join [$(Postcodes)].[$(Postcodes_Schema)].[Postcodes]
									on [Postcodes].[Postcode]=[LearnerContact].[PostCode]
							where
								[LearnerContact].[Learner_Id] = [Learner].[Learner_Id]
							for xml path ('LearnerContact'), type
							),
							(
							select
								[ContactPreference].[ContPrefCode] as [@ContPrefCode],
								[ContactPreference].[ContPrefType] as [@ContPrefType]
							from
								[Intrajob_1516].[Input].[ContactPreference]
							where
								[ContactPreference].[Learner_Id] = [Learner].[Learner_Id]
							for xml path ('ContactPreference'), type
							),
							(
							select
								[LLDDandHealthProblem].[LLDDCat] as [@LLDDCat],
								[LLDDandHealthProblem].[PrimaryLLDD] as [@PrimaryLLDD]
							from
								[Intrajob_1516].[Input].[LLDDandHealthProblem]
							where
								[LLDDandHealthProblem].[Learner_Id] = [Learner].[Learner_Id]
							for xml path ('LLDDandHealthProblem'), type
							),
							(
							select
								[LearnerHE].[TTACCOM] as [@TTACCOM],
								[LearnerHE].[UCASPERID] as [@UCASPERID],
								(
								select
									[LearnerHEFinancialSupport].[FINTYPE] as [@FINTYPE]
								from
									[Intrajob_1516].[Input].[LearnerHEFinancialSupport]
								where
									[LearnerHEFinancialSupport].[LearnerHE_Id] = [LearnerHE].[LearnerHE_Id]
								for xml path ('LearnerHEFinancialSupport'), type
								)
							from
								[Intrajob_1516].[Input].[LearnerHE]
							where
								[LearnerHE].[Learner_Id] = [Learner].[Learner_Id]
							for xml path ('LearnerHE'), type
							),
							(
							select
								[ProviderSpecLearnerMonitoring].[ProvSpecLearnMon] as [@ProvSpecLearnMon],
								[ProviderSpecLearnerMonitoring].[ProvSpecLearnMonOccur] as [@ProvSpecLearnMonOccur]
							from
								[Intrajob_1516].[Input].[ProviderSpecLearnerMonitoring]
							where
								[ProviderSpecLearnerMonitoring].[Learner_Id] = [Learner].[Learner_Id]
							for xml path ('ProviderSpecLearnerMonitoring'), type
							),
							(
							select
								[LearnerDestinationandProgression].[LearnRefNumber] as [@DP_LearnRefNumber],
								[LearnerDestinationandProgression].[ULN] as [@DP_ULN],
								(
								select
									[DPOutcome].[OutCode] as [@OutCode],
									[DPOutcome].[OutStartDate] as [@OutStartDate],
									[DPOutcome].[OutType] as [@OutType]
								from
									[Intrajob_1516].[Input].[DPOutcome]
								where
									[DPOutcome].[LearnerDestinationAndProgression_Id] = [LearnerDestinationandProgression].[LearnerDestinationAndProgression_Id]
								for xml path ('DPOutcome'), type
								)
							from
								[Input].[LearnerDestinationandProgression]
							where
								[LearnerDestinationandProgression].[LearnRefNumber] = [Learner].[LearnRefNumber]
							for xml path ('LearnerDestinationAndProgression'), type
							)
						from
							[Intrajob_1516].[Input].[Learner]
							left join [$(Org)].[$(Org_Schema)].[Org_PartnerUKPRN]
								on [Org_PartnerUKPRN].[UKPRN]=[Learner].[PrevUKPRN]
							left join [$(ULN)].[$(ULN_Schema)].[UniqueLearnerNumbers]
								on [UniqueLearnerNumbers].[ULN]=[Learner].[ULN]
						where
							[Learner].[Learner_Id] = [ControllingTable].[Learner_Id]
						for xml path ('Learner'), type
						)
					from
						[Intrajob_1516].[Input].[CollectionDetails]
						cross join [$(LARS)].[$(LARS_Schema)].[LARS_Current_Version]
						cross join [$(Org)].[$(Org_Schema)].[Org_Current_Version]
						cross join [Intrajob_1516].[Input].[LearningProvider]
						left join
							(
								select distinct
									[ukprn],
									[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as vw_ContractValidation_180
							on [vw_ContractValidation_180].[ukprn]=[LearningProvider].[UKPRN]
							and [vw_ContractValidation_180].[fundingStreamPeriodCode]='16-18APPS1516'
						left join
							(
								select distinct
									[ukprn],
									[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as vw_ContractValidation_181
							on [vw_ContractValidation_181].[ukprn]=[LearningProvider].[UKPRN]
							and [vw_ContractValidation_181].[fundingStreamPeriodCode]='24+ALLB1516'
						left join
							(
								select distinct
									[ukprn],
									[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as vw_ContractValidation_182
							on [vw_ContractValidation_182].[ukprn]=[LearningProvider].[UKPRN]
							and [vw_ContractValidation_182].[fundingStreamPeriodCode]='24+ALLBC1516'
						left join
							(
								select distinct
									[ukprn],
									[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as vw_ContractValidation_183
							on [vw_ContractValidation_183].[ukprn]=[LearningProvider].[UKPRN]
							and [vw_ContractValidation_183].[fundingStreamPeriodCode]='ASC1516'
						left join
							(
								select distinct
									[ukprn],
									[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as vw_ContractValidation_184
							on [vw_ContractValidation_184].[ukprn]=[LearningProvider].[UKPRN]
							and [vw_ContractValidation_184].[fundingStreamPeriodCode]='ASTO1516'
						left join
							(
								select distinct
									[ukprn],
									[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as vw_ContractValidation_185
							on [vw_ContractValidation_185].[ukprn]=[LearningProvider].[UKPRN]
							and [vw_ContractValidation_185].[fundingStreamPeriodCode]='ESF1516'
						left join
							(
								select distinct
									[ukprn],
									[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as vw_ContractValidation_186
							on [vw_ContractValidation_186].[ukprn]=[LearningProvider].[UKPRN]
							and [vw_ContractValidation_186].[fundingStreamPeriodCode]='OLASS1516'
						left join [$(Org)].[$(Org_Schema)].[Org_Details]
							on [Org_Details].[UKPRN]=[LearningProvider].[UKPRN]
					for xml path ('global'), type
				)
			)
		from
			[Input].[Learner] ControllingTable
	end
GO
if object_id('[Rulebase].[VAL_Insert_global]','p') is not null
	drop procedure [Rulebase].[VAL_Insert_global]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 04 January 2016 07:49
-- Profile: 1516 Test Harness Validation
-- Rulebase Version: DCSS 1516 Validation Learner 1516, Drop 000, Version 1516.16
-- =====================================================================================================
create procedure [Rulebase].[VAL_Insert_global]
	(
		@UKPRN int,
		@RulebaseVersion varchar(10),
		@OrgVersion varchar(50),
		@PostcodeVersion varchar(50),
		@EmployerVersion varchar(50),
		@LARSVersion varchar(50)
	)
as
	begin
		set nocount on
		insert into
			[Rulebase].[VAL_global]
		values (
			@UKPRN,
			@RulebaseVersion,
			@OrgVersion,
			@PostcodeVersion,
			@EmployerVersion,
			@LARSVersion
		)
	end
GO
if object_id('[Rulebase].[VAL_Insert_ValidationError]','p') is not null
	drop procedure [Rulebase].[VAL_Insert_ValidationError]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 04 January 2016 07:49
-- Profile: 1516 Test Harness Validation
-- Rulebase Version: DCSS 1516 Validation Learner 1516, Drop 000, Version 1516.16
-- =====================================================================================================
create procedure [Rulebase].[VAL_Insert_ValidationError]
	(
		@ErrorString varchar(2000)
	)
as
	begin
		set nocount on
		declare @xml xml = convert(xml,'<Values><value>' + replace(replace(@ErrorString,'&','&amp;'),'|', '</value><value>') + '</value></Values>')
		declare @LearnRefNumber varchar(100) = @xml.value('/Values[1]/value[1]','varchar(100)')
		declare @AimSeqNumber varchar(18) = @xml.value('/Values[1]/value[2]','varchar(18)')
		declare @RuleId varchar(50) = @xml.value('/Values[1]/value[3]','varchar(50)')
		declare @FieldValues varchar(2000) = @xml.value('/Values[1]/value[4]','varchar(2000)')
		insert into
			[Rulebase].[VAL_ValidationError]
		values (
			@AimSeqNumber,
			@ErrorString,
			@FieldValues,
			@LearnRefNumber,
			@RuleId
		)
	end
GO
