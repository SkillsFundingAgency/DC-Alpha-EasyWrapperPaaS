use [Intrajob_1516]
GO
if object_id('[Rulebase].[TBLVAL_Get_Cases]','p') is not null
	drop procedure [Rulebase].[TBLVAL_Get_Cases]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 31 July 2015 15:23
-- Profile: 1516 Test Harness Validation
-- Rulebase Version: DCSS 1516 Trailblazer Validation 1516, Drop 000, Version 1516.03
-- =====================================================================================================
create procedure [Rulebase].[TBLVAL_Get_Cases] as

	begin
		set nocount on
		select
			CaseData
		from
			[Rulebase].[TBLVAL_Cases]
	end
GO
if object_id('[Rulebase].[TBLVAL_Insert_Cases]','p') is not null
	drop procedure [Rulebase].[TBLVAL_Insert_Cases]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 31 July 2015 15:23
-- Profile: 1516 Test Harness Validation
-- Rulebase Version: DCSS 1516 Trailblazer Validation 1516, Drop 000, Version 1516.03
-- =====================================================================================================
create procedure [Rulebase].[TBLVAL_Insert_Cases] as

	begin
		set nocount on

		insert into
			[Rulebase].[TBLVAL_Cases]
			(
				[Learner_Id],
				CaseData
			)
		select
			ControllingTable.[Learner_Id],
			convert(xml,
				(
					select
						[CollectionDetails].[FilePreparationDate] as [@FilePreparationDate],
						[LearningProvider].[UKPRN] as [@UKPRN],
						(
						select
							[Learner].[LearnRefNumber] as [@LearnRefNumber],
							(
							select
								[LearnerEmploymentStatus].[DateEmpStatApp] as [@DateEmpStatApp],
								(
								select
									[EmploymentStatusMonitoring].[ESMCode] as [@ESMCode],
									[EmploymentStatusMonitoring].[ESMType] as [@ESMType]
								from
									[Intrajob_1516].[Input].[EmploymentStatusMonitoring]
								where
									[EmploymentStatusMonitoring].[LearnerEmploymentStatus_Id] = [LearnerEmploymentStatus].[LearnerEmploymentStatus_Id]
								for xml path ('LearnerEmploymentStatusMonitoring'), type
								)
							from
								[Intrajob_1516].[Input].[LearnerEmploymentStatus]
							where
								[LearnerEmploymentStatus].[Learner_Id] = [Learner].[Learner_Id]
							for xml path ('LearnerEmploymentStatus'), type
							),
							(
							select
								[LearningDelivery].[AimSeqNumber] as [@AimSeqNumber],
								[LearningDelivery].[AimType] as [@AimType],
								[LearningDelivery].[CompStatus] as [@CompStatus],
								[LearningDelivery].[FundModel] as [@FundModel],
								[LearningDelivery].[LearnActEndDate] as [@LearnActEndDate],
								[LearningDelivery].[LearnAimRef] as [@LearnAimRef],
								[LearningDelivery].[LearnPlanEndDate] as [@LearnPlanEndDate],
								[LearningDelivery].[LearnStartDate] as [@LearnStartDate],
								[LearningDelivery].[OrigLearnStartDate] as [@OrigLearnStartDate],
								[LearningDelivery].[ProgType] as [@ProgType],
								(
								select
									[TrailblazerApprenticeshipFinancialRecord].[TBFinAmount] as [@TBFinAmount],
									[TrailblazerApprenticeshipFinancialRecord].[TBFinCode] as [@TBFinCode],
									[TrailblazerApprenticeshipFinancialRecord].[TBFinDate] as [@TBFinDate],
									[TrailblazerApprenticeshipFinancialRecord].[TBFinType] as [@TBFinType]
								from
									[Intrajob_1516].[Input].[TrailblazerApprenticeshipFinancialRecord]
								where
									[TrailblazerApprenticeshipFinancialRecord].[LearningDelivery_Id] = [LearningDelivery].[LearningDelivery_Id]
								for xml path ('TrailblazerApprenticeshipFinancialRecord'), type
								),
								(
								select
									[LearningDeliveryFAM].[LearnDelFAMCode] as [@LearnDelFAMCode],
									[LearningDeliveryFAM].[LearnDelFAMDateFrom] as [@LearnDelFAMDateFrom],
									[LearningDeliveryFAM].[LearnDelFAMDateTo] as [@LearnDelFAMDateTo],
									[LearningDeliveryFAM].[LearnDelFAMType] as [@LearnDelFAMType]
								from
									[Intrajob_1516].[Input].[LearningDeliveryFAM]
								where
									[LearningDeliveryFAM].[LearningDelivery_Id] = [LearningDelivery].[LearningDelivery_Id]
								for xml path ('LearningDeliveryFAM'), type
								)
							from
								[Intrajob_1516].[Input].[LearningDelivery]
							where
								[LearningDelivery].[Learner_Id] = [Learner].[Learner_Id]
							for xml path ('LearningDelivery'), type
							)
						from
							[Intrajob_1516].[Input].[Learner]
						where
							[Learner].[Learner_Id] = [ControllingTable].[Learner_Id]
						for xml path ('Learner'), type
						)
					from
						[Intrajob_1516].[Input].[CollectionDetails]
						cross join [Intrajob_1516].[Input].[LearningProvider]
					for xml path ('global'), type
				)
			)
		from
			[Input].[Learner] ControllingTable
			inner join
				(
					select distinct
						[LearningDelivery].[Learner_Id]
					from
						[Input].[LearningDelivery]
					where
						[LearningDelivery].[FundModel]=81
						and [LearningDelivery].[ProgType]=25
				) [Filter_LearningDelivery]
				on [Filter_LearningDelivery].[Learner_Id]=[ControllingTable].[Learner_Id]
	end
GO
if object_id('[Rulebase].[TBLVAL_Insert_global]','p') is not null
	drop procedure [Rulebase].[TBLVAL_Insert_global]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 31 July 2015 15:23
-- Profile: 1516 Test Harness Validation
-- Rulebase Version: DCSS 1516 Trailblazer Validation 1516, Drop 000, Version 1516.03
-- =====================================================================================================
create procedure [Rulebase].[TBLVAL_Insert_global]
	(
		@UKPRN int,
		@RulebaseVersion varchar(10)
	)
as
	begin
		set nocount on
		insert into
			[Rulebase].[TBLVAL_global]
		values (
			@UKPRN,
			@RulebaseVersion
		)
	end
GO
if object_id('[Rulebase].[TBLVAL_Insert_ValidationError]','p') is not null
	drop procedure [Rulebase].[TBLVAL_Insert_ValidationError]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 31 July 2015 15:23
-- Profile: 1516 Test Harness Validation
-- Rulebase Version: DCSS 1516 Trailblazer Validation 1516, Drop 000, Version 1516.03
-- =====================================================================================================
create procedure [Rulebase].[TBLVAL_Insert_ValidationError]
	(
		@ErrorString varchar(2000)
	)
as
	begin
		set nocount on
		declare @xml xml = convert(xml,'<Values><value>' + replace(replace(@ErrorString,'&','&amp;'),'|', '</value><value>') + '</value></Values>')
		declare @LearnRefNumber varchar(100) = @xml.value('/Values[1]/value[1]','varchar(100)')
		declare @AimSeqNumber varchar(18) = @xml.value('/Values[1]/value[2]','varchar(18)')
		declare @RuleId varchar(50) = @xml.value('/Values[1]/value[3]','varchar(50)')
		declare @FieldValues varchar(2000) = @xml.value('/Values[1]/value[4]','varchar(2000)')
		insert into
			[Rulebase].[TBLVAL_ValidationError]
		values (
			@AimSeqNumber,
			@ErrorString,
			@FieldValues,
			@LearnRefNumber,
			@RuleId
		)
	end
GO
