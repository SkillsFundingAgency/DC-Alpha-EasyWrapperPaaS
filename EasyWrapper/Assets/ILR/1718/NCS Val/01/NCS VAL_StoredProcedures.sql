
if object_id('[Rulebase].[NCS_VAL_Get_Cases]','p') is not null
	drop procedure [Rulebase].[NCS_VAL_Get_Cases]
go

-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 31 May 2017 10:50
-- Profile: DCSS Validation
-- Rulebase Version: NCS Validation 1516 1516, Version 1516.07
-- =====================================================================================================
create procedure [Rulebase].[NCS_VAL_Get_Cases] as
begin
	set nocount on
	select
		CaseData
	from
		[Rulebase].[NCS_VAL_Cases]
end
GO

if object_id('[Rulebase].[NCS_VAL_Insert_Cases]','p') is not null
	drop procedure [Rulebase].[NCS_VAL_Insert_Cases]
GO

-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 31 May 2017 10:50
-- Profile: DCSS Validation
-- Rulebase Version: NCS Validation 1516 1516, Version 1516.07
-- =====================================================================================================
create procedure [Rulebase].[NCS_VAL_Insert_Cases] as
begin
set nocount on

insert into [Rulebase].[NCS_VAL_Cases] (
	[Customer_Id],
	CaseData
)
select
	ControllingTable.[CustomerID],
	convert(xml, (
		select
			[CollectionDetails].[CalendarMonth] as [@CalendarMonth]
			,[CollectionDetails].[CalendarYear] as [@CalendarYear]
			,cast([CollectionDetails].[FilePreparationDate] as date) as [@FilePreparationDate]
			,[NCS_OffenderAggregate].[NumberOfAccreditedLearningOutcomesInCustody] as [@NumberOfAccreditedLearningOutcomesInCustody]
			,[NCS_OffenderAggregate].[NumberOfCareerManagementOutcomesInCustody] as [@NumberOfCareerManagementOutcomesInCustody]
			,[NCS_OffenderAggregate].[NumberOf2ndCareerManagementOutcomesInCustody] as [@NumberOf2ndCareerManagementOutcomesInCustody]
			,[NCS_OffenderAggregate].[NumberOfCareerProgressionOutcomesInCustody] as [@NumberOfCareerProgressionOutcomesInCustody]
			,[NCS_OffenderAggregate].[NumberOfCustomerSatisfactionOutcomesInCustody] as [@NumberOfCustomerSatisfactionOutcomesInCustody]
			,[NCS_OffenderAggregate].[NumberOfCustomersSeenInCustody] as [@NumberOfCustomersSeenInCustody]
			,[NCS_Contractor].[NumberOfEmployersActual] as [@NumberOfEmployersActual]
			,[NCS_Contractor].[NumberOfSchoolsActual] as [@NumberOfSchoolsActual]
			,[NCS_OffenderAggregate].[NumberOfSustainableEmploymentOutcomesInCustody] as [@NumberOfSustainableEmploymentOutcomesInCustody]
			,[NCS_Contractor].[TotalMonthlyInspirationSpendActual] as [@TotalMonthlyInspirationSpendActual]
			,[Source].[TouchpointID] as [@TouchpointID]
			,[Source].[UKPRN] as [@UKPRN]
			,(	select
					[NCS_Customer].[CdsCustomerID] as [@CDSCustomerID]
					,[NCS_Customer].[CustomerType] as [@CustomerType]
					,[NCS_Customer].[DateOfBirth] as [@DateOfBirth]
					,[NCS_Customer].[DisabilityType] as [@DisabilityType]
					,[NCS_Customer].[Ethnicity] as [@Ethnicity]
					,[NCS_Customer].[EUCitizen] as [@EUCitizen]
					,[NCS_Customer].[FamilyName] as [@FamilyName]
					,[NCS_Customer].[Gender] as [@Gender]
					,[NCS_Customer].[GivenName] as [@GivenName]
					,[NCS_Customer].[LearningDifficulty] as [@LearningDifficulty]
					,[NCS_Customer].[LLAAccountNumber] as [@LLAAccountNumber]
					,[NCS_Customer].[NINumber] as [@NINumber]
					,[NCS_Customer].[ParticipateResearchEvaluation] as [@ParticipateResearchEvaluation]
					,[NCS_Customer].[TerminationOfServiceReason] as [@TerminationOfServiceReason]
					,[NCS_Customer].[TouchpointCustomerID] as [@TouchpointCustomerID]
					,( select
							[NCS_CustomerContact].[AlternativePhoneNumber] as [@AlternativePhoneNumber]
							,[NCS_CustomerContact].[ContactPreference] as [@ContactPreference]
							,[NCS_CustomerContact].[ContactEmail] as [@Email]
							,[NCS_CustomerContact].[PrimaryPhoneNumber] as [@PrimaryPhoneNumber]
						from
							[Pre_Validation].[NCS_CustomerContact]
						where
							[NCS_CustomerContact].[TouchpointCustomerID] = [NCS_Customer].[TouchpointCustomerID]
						for xml path ('Contact'), type)
					,(	select
							[NCS_CustomerAddress].[AlternativePostCode] as [@AlternativePostCode]
							,case when [Postcodes_179].[Postcode] is not null 
								then 'true' 
								else 'false' 
							end as [@AlternativePostCode_Lookup]
							,[NCS_CustomerAddress].[HomePostcode] as [@HomePostCode]
							,case when [Postcodes_178].[Postcode] is not null 
								then 'true' 
								else 'false' 
							end as [@HomePostCode_Lookup]
						from
							[Pre_Validation].[NCS_CustomerAddress]
							left join [$(Postcodes)].[$(Postcodes_Schema)].[Postcodes] as [Postcodes_179]
								on [Postcodes_179].[Postcode]=[NCS_CustomerAddress].[AlternativePostCode]
							left join [$(Postcodes)].[$(Postcodes_Schema)].[Postcodes] as [Postcodes_178]
								on [Postcodes_178].[Postcode]=[NCS_CustomerAddress].[HomePostcode]
						where
							[NCS_CustomerAddress].[TouchpointCustomerID] = [NCS_Customer].[TouchpointCustomerID]
						for xml path ('Address'), type)
					,(	select
							[NCS_CustomerActionPlan].[TouchpointCustomerID] as [@TouchpointCustomerID]
							,[NCS_CustomerActionPlan].[ActionPlanID] as [@ActionPlanID]
							,[NCS_CustomerActionPlan].[BenefitType] as [@BenefitType]
							,[NCS_CustomerActionPlan].[MainDeliveryType] as [@MainDeliveryType]
							,[NCS_CustomerActionPlan].[PriorityGroupL1] as [@PriorityGroupL1]
							,[NCS_CustomerActionPlan].[ReferralType] as [@ReferralType]
							,[NCS_CustomerActionPlan].[SessionDate] as [@SessionDate]
							,[NCS_CustomerActionPlan].[SourceOfAwarenessL1] as [@SourceOfAwarenessL1]
							,[NCS_CustomerActionPlan].[SourceOfAwarenessL2] as [@SourceOfAwarenessL2]
							,(	select
									[NCS_CustomerOutcome].[OutcomeAchieved] as [@OutcomeAchieved]
									,[NCS_CustomerOutcome].[OutcomeClaimed] as [@OutcomeClaimed]
									,[NCS_CustomerOutcome].[OutcomeEffectiveDate] as [@OutcomeEffectiveDate]
									,[NCS_CustomerOutcome].[OutcomeID] as [@OutcomeID]
									,[NCS_CustomerOutcome].[OutcomeType] as [@OutcomeType]
								from
									[Pre_Validation].[NCS_CustomerOutcome]
								where
									[NCS_CustomerOutcome].[TouchpointCustomerID] = [NCS_CustomerActionPlan].[TouchpointCustomerID]
										and [NCS_CustomerOutcome].[ActionPlanID] = [NCS_CustomerActionPlan].[ActionPlanID]
								for xml path ('Outcome'), type)
							,(	select
									[NCS_CustomerPriorityGroups].[PriorityGroup] as [@PriorityGroup]
								from
									[Pre_Validation].[NCS_CustomerPriorityGroups]
								where
									[NCS_CustomerPriorityGroups].[TouchpointCustomerID] = [NCS_CustomerActionPlan].[TouchpointCustomerID]
										and [NCS_CustomerPriorityGroups].[ActionPlanID] = [NCS_CustomerActionPlan].[ActionPlanID]
								for xml path ('PriorityGroupL2'), type)
							,(	select
									[NCS_CustomerEducationProgression].[EducationAttainmentLevel] as [@EdProgEdAttainmentLevel]
								from
									[Pre_Validation].[NCS_CustomerEducationProgression]
								where
									[NCS_CustomerEducationProgression].[TouchpointCustomerID] = [NCS_CustomerActionPlan].[TouchpointCustomerID]
										and [NCS_CustomerEducationProgression].[ActionPlanID] = [NCS_CustomerActionPlan].[ActionPlanID]
								for xml path ('EducationProgression'), type)
							,(	select
									[NCS_CustomerEmploymentProgression].[EmploymentStatus] as [@EmProgEmStatus]
									,[NCS_CustomerEmploymentProgression].[LengthOfUnEmployment] as [@EmProgLenOfUnemployment]
								from
									[Pre_Validation].[NCS_CustomerEmploymentProgression]
                                where
									[NCS_CustomerEmploymentProgression].[TouchpointCustomerID] = [NCS_CustomerActionPlan].[TouchpointCustomerID]
										and [NCS_CustomerEmploymentProgression].[ActionPlanID] = [NCS_CustomerActionPlan].[ActionPlanID]
                                for xml path ('EmploymentProgression'), type)
							,(	select
									[NCS_CustomerLearningProgression].[LearningStatus] as [@LearnProgLearnStatus]
								from
									[Pre_Validation].[NCS_CustomerLearningProgression]
								where
									[NCS_CustomerLearningProgression].[TouchpointCustomerID] = [NCS_CustomerActionPlan].[TouchpointCustomerID]
										and [NCS_CustomerLearningProgression].[ActionPlanID] = [NCS_CustomerActionPlan].[ActionPlanID]
								for xml path ('LearningProgression'), type)
                        from
							[Pre_Validation].[NCS_CustomerActionPlan]
						where
							[NCS_CustomerActionPlan].[TouchpointCustomerID] = [NCS_Customer].[TouchpointCustomerID]
						for xml path ('ActionPlan'), type)
				from
					[Pre_Validation].[NCS_Customer]
				where
					[NCS_Customer].[TouchpointCustomerID] = [ControllingTable].[TouchpointCustomerID]
				for xml path ('Customer'), type)
        from
			[Pre_Validation].[CollectionDetails]
			cross join [Pre_Validation].[NCS_OffenderAggregate]
			cross join [Pre_Validation].[NCS_Contractor]
			cross join [Pre_Validation].[Source]
		for xml path ('global'), type))
    from
		[Pre_Validation].[NCS_Customer] ControllingTable
end
go

if object_id('[Rulebase].[NCS_VAL_Insert_global]','p') is not null
	drop procedure [Rulebase].[NCS_VAL_Insert_global]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 31 May 2017 10:50
-- Profile: DCSS Validation
-- Rulebase Version: NCS Validation 1516 1516, Version 1516.07
-- =====================================================================================================

create procedure [Rulebase].[NCS_VAL_Insert_global]
	(
		@RulebaseVersion varchar(10),
		@TouchpointID varchar(100)
	)
as
	begin
		set nocount on
		insert into
			[Rulebase].[NCS_VAL_global]
		values (
			@TouchpointID,
			@RulebaseVersion
		)
	end
go

if object_id('[Rulebase].[NCS_VAL_Insert_ValidationError]','p') is not null
	drop procedure [Rulebase].[NCS_VAL_Insert_ValidationError]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 31 May 2017 10:50
-- Profile: DCSS Validation
-- Rulebase Version: NCS Validation 1516 1516, Version 1516.07
-- =====================================================================================================

create procedure [Rulebase].[NCS_VAL_Insert_ValidationError]
	(
		@ActionPlanID varchar(100),
		@ErrorMessage varchar(2000),
		@RuleId varchar(100),
		@Severity varchar(10),
		@TouchpointCustomerID varchar(100),
		@TouchpointID varchar(100),
		@ValidationErrorID varchar(2500)
	)
as
	begin
		set nocount on
		declare @xml xml = convert(xml,'<Values><value>' + replace(replace(@ValidationErrorID,'&','&amp;'),'|', '</value><value>') + '</value></Values>')
		--declare @TouchpointID varchar(100) = @xml.value('/Values[1]/value[1]','varchar(100)')
		--declare @TouchpointCustomerID varchar(100) = @xml.value('/Values[1]/value[2]','varchar(100)')
		--declare @ActionPlanID varchar(100) = @xml.value('/Values[1]/value[3]','varchar(100)')
		--declare @RuleId varchar(100) = @xml.value('/Values[1]/value[4]','varchar(100)')
		--declare @Severity varchar(10) = @xml.value('/Values[1]/value[5]','varchar(10)')
		--declare @ErrorMessage varchar(2000) = @xml.value('/Values[1]/value[6]','varchar(2000)')
		insert into
			[Rulebase].[NCS_VAL_ValidationError]
		values (
			@ActionPlanID,
			@ErrorMessage,
			@RuleId,
			@Severity,
			@TouchpointCustomerID,
			@TouchpointID,
			@ValidationErrorID
		)
	end
go
