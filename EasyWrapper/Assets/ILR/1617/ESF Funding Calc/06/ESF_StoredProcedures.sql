use [$(IntrajobDatabase)]
GO
if object_id('[Rulebase].[ESF_Get_Cases]','p') is not null
	drop procedure [Rulebase].[ESF_Get_Cases]
go
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 20 December 2016 11:11
-- Profile: Test Harness Calculation
-- Rulebase Version: ILR ESF Funding Calc 1617, Version 1617.06
-- =====================================================================================================
create procedure [Rulebase].[ESF_Get_Cases] as

	begin
		set nocount on
		select
			CaseData
		from
			[Rulebase].[ESF_Cases]
	end
GO
if object_id('[Rulebase].[ESF_Insert_Cases]','p') is not null
	drop procedure [Rulebase].[ESF_Insert_Cases]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 20 December 2016 11:11
-- Profile: Test Harness Calculation
-- Rulebase Version: ILR ESF Funding Calc 1617, Version 1617.06
-- =====================================================================================================
create procedure [Rulebase].[ESF_Insert_Cases] as

	begin
		set nocount on

		insert into
			[Rulebase].[ESF_Cases]
			(
				[LearnRefNumber],
				CaseData
			)
		select
			ControllingTable.[LearnRefNumber],
			convert(xml,
				(
					select
						[LearningProvider].[UKPRN] as [@UKPRN],
						(
							select
								[Learner].[DateOfBirth] as [@DateOfBirth],
								[Learner].[LearnRefNumber] as [@LearnRefNumber],
								(
									select
										[LearningDelivery].[AchDate] as [@AchDate],
										[LearningDelivery].[AddHours] as [@AddHours],
										[LearningDelivery].[AimSeqNumber] as [@AimSeqNumber],
										[LearningDelivery_ContractAllocation_Lot].[CalcMethod] as [@CalcMethod],
										[LearningDelivery].[CompStatus] as [@CompStatus],
										[LearningDelivery].[ConRefNumber] as [@ConRefNumber],
										[LARS_LearningDelivery].[LearningDeliveryGenre] as [@GenreCode],
										[LearningDelivery].[LearnActEndDate] as [@LearnActEndDate],
										[LearningDelivery].[LearnAimRef] as [@LearnAimRef],
										[LearningDelivery].[LearnPlanEndDate] as [@LearnPlanEndDate],
										[LearningDelivery].[LearnStartDate] as [@LearnStartDate],
										[LearningDelivery].[LrnDelFAM_LDM1] as [@LrnDelFAM_LDM1],
										[LearningDelivery].[LrnDelFAM_LDM2] as [@LrnDelFAM_LDM2],
										[LearningDelivery].[LrnDelFAM_LDM3] as [@LrnDelFAM_LDM3],
										[LearningDelivery].[LrnDelFAM_LDM4] as [@LrnDelFAM_LDM4],
										[LearningDelivery].[LrnDelFAM_RES] as [@LrnDelFAM_RES],
										[LearningDelivery].[OrigLearnStartDate] as [@OrigLearnStartDate],
										[LearningDelivery].[OtherFundAdj] as [@OtherFundAdj],
										[LearningDelivery].[Outcome] as [@Outcome],
										[LearningDelivery].[PriorLearnFundAdj] as [@PriorLearnFundAdj],
										(
											select
												[LearningDelivery_vw_ContractDescription_DeliverableCodeMappings].[contractEndDate] as [@EffectiveContractEndDate],
												[LearningDelivery_vw_ContractDescription_DeliverableCodeMappings].[contractStartDate] as [@EffectiveContractStartDate],
												[LearningDelivery_vw_ContractDescription_DeliverableCodeMappings].[learningRatePremiumFactor] as [@ESFDataPremiumFactor],
												[LearningDelivery_vw_ContractDescription_DeliverableCodeMappings].[ExternalDeliverableCode] as [@ESFDeliverableCode],
												[LearningDelivery_vw_ContractDescription_DeliverableCodeMappings].[unitCost] as [@UnitCost]
											from
												(
													select
														[vw_ContractDescription].[contractEndDate],
														[vw_ContractDescription].[contractStartDate],
														[vw_ContractDescription].[learningRatePremiumFactor],
														[DeliverableCodeMappings].[ExternalDeliverableCode],
														[vw_ContractDescription].[unitCost],
														[vw_ContractDescription].[contractAllocationNumber],
														[DeliverableCodeMappings].[FundingStreamPeriodCode],
														[DeliverableCodeMappings].[FCSDeliverableCode]
													from
														[$(FCT)].[$(FCT_Schema)].[DeliverableCodeMappings]
														inner join [$(FCT)].[$(FCT_Schema)].[vw_ContractDescription]
															on [DeliverableCodeMappings].[FundingStreamPeriodCode]=[vw_ContractDescription].[fundingStreamPeriodCode]
															and [DeliverableCodeMappings].[FCSDeliverableCode]=[vw_ContractDescription].[deliverableCode]
												)  as LearningDelivery_vw_ContractDescription_DeliverableCodeMappings
											where
												[LearningDelivery_vw_ContractDescription_DeliverableCodeMappings].[contractAllocationNumber]=[LearningDelivery].[ConRefNumber]
											for xml path ('ESFData'), type
										),
										(
											select
												[LARS_Funding].[FundingCategory] as [@LARSFundingCategory],
												[LARS_Funding].[EffectiveFrom] as [@LARSFundingEffectiveFrom],
												[LARS_Funding].[EffectiveTo] as [@LARSFundingEffectiveTo],
												[LARS_Funding].[RateWeighted] as [@LARSFundingWeightedRate]
											from
												[$(LARS)].[$(LARS_Schema)].[LARS_Funding]
											where
												[LARS_Funding].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
											for xml path ('LearningDeliveryLARSFunding'), type
										),
										(
											select
												[LARS_AnnualValue].[BasicSkillsType] as [@LearnDelAnnValBasicSkillsTypeCode],
												[LARS_AnnualValue].[EffectiveFrom] as [@LearnDelAnnValDateFrom],
												[LARS_AnnualValue].[EffectiveTo] as [@LearnDelAnnValDateTo]
											from
												[$(LARS)].[$(LARS_Schema)].[LARS_AnnualValue]
											where
												[LARS_AnnualValue].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
											for xml path ('LearningDeliveryAnnualValue'), type
										),
										(
											select
												[SFA_PostcodeAreaCost].[EffectiveFrom] as [@AreaCosEffectiveFrom],
												[SFA_PostcodeAreaCost].[EffectiveTo] as [@AreaCosEffectiveTo],
												[SFA_PostcodeAreaCost].[AreaCostFactor] as [@AreaCosFactor]
											from
												[$(PostcodeFactors)].[$(PostcodeFactors_Schema)].[SFA_PostcodeAreaCost]
											where
												[SFA_PostcodeAreaCost].[Postcode]=[LearningDelivery].[DelLocPostCode]
											for xml path ('SFA_PostcodeAreaCost'), type
										)
									from
										[Valid].[LearningDelivery]
										left join [$(LARS)].[$(LARS_Schema)].[LARS_LearningDelivery]
											on [LARS_LearningDelivery].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
										left join
											(
												select
													[Lot].[CalcMethod],
													[ContractAllocation].[ContractAllocationNumber],
													[Lot].[TenderSpecificationReference],
													[Lot].[LotReference]
												from
													[$(FCSESF)].[$(FCSESF_Schema)].[Lot]
													inner join [$(FCSESF)].[$(FCSESF_Schema)].[ContractAllocation]
														on [Lot].[TenderSpecificationReference]=[ContractAllocation].[TenderSpecReference]
														and [Lot].[LotReference]=[ContractAllocation].[LotReference]
											)  as LearningDelivery_ContractAllocation_Lot
												on [LearningDelivery_ContractAllocation_Lot].[ContractAllocationNumber]=[LearningDelivery].[ConRefNumber]
									where
										[LearningDelivery].[LearnRefNumber] = [Learner].[LearnRefNumber]
										and [LearningDelivery].[FundModel]=70
									for xml path ('LearningDelivery'), type
								),
								(
									select
										[DPOutcome].[OutCode] as [@OutCode],
										[DPOutcome].[OutCollDate] as [@OutCollDate],
										[DPOutcome].[OutEndDate] as [@OutEndDate],
										[DPOutcome].[OutStartDate] as [@OutStartDate],
										[DPOutcome].[OutType] as [@OutType]
									from
										[Valid].[DPOutcome]
									where
										[DPOutcome].[LearnRefNumber] = [Learner].[LearnRefNumber]
									for xml path ('DPOutcome'), type
								)
							from
								[Valid].[Learner]
							where
								[Learner].[LearnRefNumber] = [ControllingTable].[LearnRefNumber]
							for xml path ('Learner'), type
						)
					from
						[Valid].[LearningProvider]
					for xml path ('global'), type
				)
			)
		from
			[Valid].[Learner] ControllingTable
			inner join
				(
					select distinct
						[LearningDelivery].[LearnRefNumber]
					from
						[Valid].[LearningDelivery]
					where
						[LearningDelivery].[FundModel]=70
				) [Filter_LearningDelivery]
				on [Filter_LearningDelivery].[LearnRefNumber]=[ControllingTable].[LearnRefNumber]
	end
GO
if object_id('[Rulebase].[ESF_Insert_global]','p') is not null
	drop procedure [Rulebase].[ESF_Insert_global]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 20 December 2016 11:12
-- Profile: Test Harness Calculation
-- Rulebase Version: ILR ESF Funding Calc 1617, Version 1617.06
-- =====================================================================================================

create procedure [Rulebase].[ESF_Insert_global]
	(
		@UKPRN int,
		@RulebaseVersion varchar(10)
	)
as
	begin
		set nocount on
		insert into
			[Rulebase].[ESF_global]
		values (
			@UKPRN,
			@RulebaseVersion
		)
	end
go
if object_id('[Rulebase].[ESF_Insert_LearningDelivery]','p') is not null
	drop procedure [Rulebase].[ESF_Insert_LearningDelivery]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 20 December 2016 11:12
-- Profile: Test Harness Calculation
-- Rulebase Version: ILR ESF Funding Calc 1617, Version 1617.06
-- =====================================================================================================

create procedure [Rulebase].[ESF_Insert_LearningDelivery]
	(
		@LearnRefNumber varchar(12),
		@AimSeqNumber int,
		@Achieved bit,
		@AddProgCostElig bit,
		@AdjustedAreaCostFactor decimal(9,5),
		@AdjustedPremiumFactor decimal(9,5),
		@AdjustedStartDate date,
		@AimClassification varchar(50),
		@AimValue decimal(10,5),
		@ApplicWeightFundRate decimal(10,5),
		@EligibleProgressionOutcomeCode bigint,
		@EligibleProgressionOutcomeType varchar(4),
		@EligibleProgressionOutomeStartDate date,
		@FundStart bit,
		@LARSWeightedRate decimal(10,5),
		@LatestPossibleStartDate date,
		@LDESFEngagementStartDate date,
		@PotentiallyEligibleForProgression bit,
		@ProgressionEndDate date,
		@Restart bit,
		@WeightedRateFromESOL decimal(10,5)
	)
as
	begin
		set nocount on
		insert into
			[Rulebase].[ESF_LearningDelivery]
		values (
			@LearnRefNumber,
			@AimSeqNumber,
			@Achieved,
			@AddProgCostElig,
			@AdjustedAreaCostFactor,
			@AdjustedPremiumFactor,
			@AdjustedStartDate,
			@AimClassification,
			@AimValue,
			@ApplicWeightFundRate,
			@EligibleProgressionOutcomeCode,
			@EligibleProgressionOutcomeType,
			@EligibleProgressionOutomeStartDate,
			@FundStart,
			@LARSWeightedRate,
			@LatestPossibleStartDate,
			@LDESFEngagementStartDate,
			@PotentiallyEligibleForProgression,
			@ProgressionEndDate,
			@Restart,
			@WeightedRateFromESOL
		)
	end
go
if object_id('[Rulebase].[ESF_Insert_LearningDeliveryDeliverable]','p') is not null
	drop procedure [Rulebase].[ESF_Insert_LearningDeliveryDeliverable]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 20 December 2016 11:12
-- Profile: Test Harness Calculation
-- Rulebase Version: ILR ESF Funding Calc 1617, Version 1617.06
-- =====================================================================================================

create procedure [Rulebase].[ESF_Insert_LearningDeliveryDeliverable]
	(
		@LearnRefNumber varchar(12),
		@AimSeqNumber int,
		@DeliverableCode varchar(5),
		@AchievementEarnings decimal(10,5),
		@AdditionalProgCostEarnings decimal(10,5),
		@DeliverableUnitCost decimal(10,5),
		@DeliverableVolume bigint,
		@ProgressionEarnings decimal(10,5),
		@ReportingVolume int,
		@StartEarnings decimal(10,5)
	)
as
	begin
		set nocount on
		insert into
			[Rulebase].[ESF_LearningDeliveryDeliverable]
		values (
			@LearnRefNumber,
			@AimSeqNumber,
			@DeliverableCode,
			@DeliverableUnitCost
		)
	end
go
if object_id('[Rulebase].[ESF_Insert_LearningDeliveryDeliverable_PeriodisedValues]','p') is not null
	drop procedure [Rulebase].[ESF_Insert_LearningDeliveryDeliverable_PeriodisedValues]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 20 December 2016 11:12
-- Profile: Test Harness Calculation
-- Rulebase Version: ILR ESF Funding Calc 1617, Version 1617.06
-- =====================================================================================================
create procedure [Rulebase].[ESF_Insert_LearningDeliveryDeliverable_PeriodisedValues]
	(
		@LearnRefNumber varchar(12),
		@AimSeqNumber int,
		@DeliverableCode varchar(5),
		@AttributeName varchar(100),
		@Period_1 decimal(15,5),
		@Period_2 decimal(15,5),
		@Period_3 decimal(15,5),
		@Period_4 decimal(15,5),
		@Period_5 decimal(15,5),
		@Period_6 decimal(15,5),
		@Period_7 decimal(15,5),
		@Period_8 decimal(15,5),
		@Period_9 decimal(15,5),
		@Period_10 decimal(15,5),
		@Period_11 decimal(15,5),
		@Period_12 decimal(15,5)
	)
as
	begin
		set nocount on
		insert into
			[Rulebase].[ESF_LearningDeliveryDeliverable_PeriodisedValues]
				(
					LearnRefNumber,
					AimSeqNumber,
					DeliverableCode,
					AttributeName,
					Period_1,
					Period_2,
					Period_3,
					Period_4,
					Period_5,
					Period_6,
					Period_7,
					Period_8,
					Period_9,
					Period_10,
					Period_11,
					Period_12
				)
		values
			(
				@LearnRefNumber,
				@AimSeqNumber,
				@DeliverableCode,
				@AttributeName,
				@Period_1,
				@Period_2,
				@Period_3,
				@Period_4,
				@Period_5,
				@Period_6,
				@Period_7,
				@Period_8,
				@Period_9,
				@Period_10,
				@Period_11,
				@Period_12
			)
	end
GO
if object_id('[Rulebase].[ESF_PivotTemporals_LearningDeliveryDeliverable]','p') is not null
	drop procedure [Rulebase].[ESF_PivotTemporals_LearningDeliveryDeliverable]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 20 December 2016 11:12
-- Profile: Test Harness Calculation
-- Rulebase Version: ILR ESF Funding Calc 1617, Version 1617.06
-- =====================================================================================================
create procedure [Rulebase].[ESF_PivotTemporals_LearningDeliveryDeliverable] as
	begin
		truncate table [Rulebase].[ESF_LearningDeliveryDeliverable_Period]
		insert into
			[Rulebase].[ESF_LearningDeliveryDeliverable_Period]
		select
			LearnRefNumber,
			AimSeqNumber,
			DeliverableCode,
			Period,
			max(case AttributeName when 'AchievementEarnings' then Value else null end) AchievementEarnings,
			max(case AttributeName when 'AdditionalProgCostEarnings' then Value else null end) AdditionalProgCostEarnings,
			max(case AttributeName when 'DeliverableVolume' then Value else null end) DeliverableVolume,
			max(case AttributeName when 'ProgressionEarnings' then Value else null end) ProgressionEarnings,
			max(case AttributeName when 'ReportingVolume' then Value else null end) ReportingVolume,
			max(case AttributeName when 'StartEarnings' then Value else null end) StartEarnings
		from
			(
				select
					LearnRefNumber,
					AimSeqNumber,
					DeliverableCode,
					AttributeName,
					cast(substring(PeriodValue.Period,8,2) as int) Period,
					PeriodValue.Value
				from
					[Rulebase].[ESF_LearningDeliveryDeliverable_PeriodisedValues]
					unpivot (Value for Period in (Period_1,Period_2,Period_3,Period_4,Period_5,Period_6,Period_7,Period_8,Period_9,Period_10,Period_11,Period_12)) as PeriodValue
			) Bob
		group by
			LearnRefNumber,
			AimSeqNumber,
			DeliverableCode,
			Period
	end
GO
if object_id('[Rulebase].[ESF_Insert_DPOutcome]','p') is not null
	drop procedure [Rulebase].[ESF_Insert_DPOutcome]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 20 December 2016 11:12
-- Profile: Test Harness Calculation
-- Rulebase Version: ILR ESF Funding Calc 1617, Version 1617.06
-- =====================================================================================================

create procedure [Rulebase].[ESF_Insert_DPOutcome]
	(
		@LearnRefNumber varchar(12),
		@OutCode int,
		@OutType varchar(30),
		@OutStartDate date,
		@OutcomeDateForProgression date,
		@PotentialESFProgressionType bit,
		@ProgressionType varchar(50),
		@ReachedSixMonthPoint bit,
		@ReachedThreeMonthPoint bit,
		@ReachedTwelveMonthPoint bit
	)
as
	begin
		set nocount on
		insert into
			[Rulebase].[ESF_DPOutcome]
		values (
			@LearnRefNumber,
			@OutCode,
			@OutType,
			@OutStartDate,
			@OutcomeDateForProgression,
			@PotentialESFProgressionType,
			@ProgressionType,
			@ReachedSixMonthPoint,
			@ReachedThreeMonthPoint,
			@ReachedTwelveMonthPoint
		)
	end
go
