use [$(IntrajobDatabase)]
GO
if object_id('[Rulebase].[VAL_Get_Cases]','p') is not null
	drop procedure [Rulebase].[VAL_Get_Cases]
go
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 30 March 2017 15:10
-- Profile: Test Harness Validation
-- Rulebase Version: ILR Validation Learner 1617, Version 1617.06
-- =====================================================================================================
create procedure [Rulebase].[VAL_Get_Cases] as

	begin
		set nocount on
		select
			CaseData
		from
			[Rulebase].[VAL_Cases]
	end
GO
if object_id('[Rulebase].[VAL_Insert_Cases]','p') is not null
	drop procedure [Rulebase].[VAL_Insert_Cases]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 30 March 2017 15:10
-- Profile: Test Harness Validation
-- Rulebase Version: ILR Validation Learner 1617, Version 1617.06
-- =====================================================================================================
create procedure [Rulebase].[VAL_Insert_Cases] as

	begin
		set nocount on

		insert into
			[Rulebase].[VAL_Cases]
			(
				[Learner_Id],
				CaseData
			)
		select
			ControllingTable.[Learner_Id],
			convert(xml,
				(
					select
						case when '${dcft.runmode}' = 'DS' then 'true' else 'false' end as [@DesktopMode],
						case when [LearningProvider_vw_ContractValidation_1618APPS1617].[UKPRN] is not null then 'true' else 'false' end as [@FCT_1618APPS1617],
						case when [LearningProvider_vw_ContractValidation_1618APPS1617].[UKPRN] is not null then 'true' else 'false' end as [@FCT_1618NLA1718],
						case when [LearningProvider_vw_ContractValidation_ALLB1617].[UKPRN] is not null then 'true' else 'false' end as [@FCT_24PlusALLB1617],
						case when [LearningProvider_vw_ContractValidation_ALLBC1617].[UKPRN] is not null then 'true' else 'false' end as [@FCT_24PlusALLBC1617],
						case when [LearningProvider_vw_ContractValidation_AAC1617].[UKPRN] is not null then 'true' else 'false' end as [@FCT_AAC1617],
						case when [LearningProvider_vw_ContractValidation_AATO1617].[UKPRN] is not null then 'true' else 'false' end as [@FCT_AATO1617],
						case [LearningProvider_vw_ContractValidation_1618APPS1617].[UKPRN] when 1 then 'true' when 0 then 'false' end as [@FCT_ANLA1718],
						case when [LearningProvider_vw_ContractValidation_AEBC1617].[UKPRN] is not null then 'true' else 'false' end as [@FCT_ASC1617],
						case when [LearningProvider_vw_ContractValidation_AEBTO-TOL1617].[UKPRN] is not null then 'true' else 'false' end as [@FCT_ASTO1617],
						case when [LearningProvider_vw_ContractValidation_ESF1420].[UKPRN] is not null then 'true' else 'false' end as [@FCT_ESF1420],
						case when [LearningProvider_vw_ContractValidation_1618APPS1617].[UKPRN] is not null then 'true' else 'false' end as [@FCT_LEVY1799],
						case when [LearningProvider_vw_ContractValidation_OLASS1617].[UKPRN] is not null then 'true' else 'false' end as [@FCT_OLASS1617],
						[CollectionDetails].[FilePreparationDate] as [@FilePreparationDate],
						[LARS_Current_Version].[CurrentVersion] as [@LARSVersion],
						[Org_Details].[LegalOrgType] as [@LegalOrgType],
						[Org_Current_Version].[CurrentVersion] as [@OrgVersion],
						[LearningProvider].[UKPRN] as [@UKPRN],
						(
							select
								[Learner].[Accom] as [@Accom],
								[Learner].[ALSCost] as [@ALSCost],
								[Learner].[DateOfBirth] as [@DateOfBirth],
								[Learner].[EngGrade] as [@EngGrade],
								[Learner].[Ethnicity] as [@Ethnicity],
								[Learner].[FamilyName] as [@FamilyName],
								[Learner].[GivenNames] as [@GivenNames],
								[Learner].[LearnRefNumber] as [@LearnRefNumber],
								[Learner].[LLDDHealthProb] as [@LLDDHealthProb],
								[Learner].[MathGrade] as [@MathGrade],
								[Learner].[NINumber] as [@NINumber],
								[Learner].[PlanEEPHours] as [@PlanEEPHours],
								[Learner].[PlanLearnHours] as [@PlanLearnHours],
								[Learner].[PrevUKPRN] as [@PrevUKPRN],
								case when [Org_PartnerUKPRN].[UKPRN] is not null then 'true' else 'false' end as [@PrevUKPRNLookup],
								[Learner].[PriorAttain] as [@PriorAttain],
								[Learner].[Sex] as [@Sex],
								[Learner].[ULN] as [@ULN],
								case when [UniqueLearnerNumbers].[ULN] is not null then 'true' else 'false' end as [@ULNLookup],
								(
									select
										[LearningDelivery].[AchDate] as [@AchDate],
										[LearningDelivery].[AddHours] as [@AddHours],
										[LearningDelivery].[AimSeqNumber] as [@AimSeqNumber],
										[LearningDelivery].[AimType] as [@AimType],
										[LearningDelivery_LARS_LearningDelivery].[AwardOrgAimRef] as [@AwardOrgAimRef],
										[LearningDelivery].[CompStatus] as [@CompStatus],
										[LearningDelivery].[ConRefNumber] as [@ConRefNumber],
										case when [vw_ContractAllocation].[contractAllocationNumber] is not null then 'true' else 'false' end as [@ConRefNumberValidLookUP],
										[LearningDelivery].[DelLocPostCode] as [@DelLocPostcode],
										case when [Postcodes].[Postcode] is not null then 'true' else 'false' end as [@DelLocPostcodeLookup],
										case when [Postcodes].[Postcode] is not null then 'true' else 'false' end as [@DelLocPostcodeOLASSLookup],
										[LearningDelivery].[EmpOutcome] as [@EmpOutcome],
										[LARS_FrameworkAims].[EffectiveTo] as [@FrameworkAimEffectiveTo],
										case when [LARS_FrameworkAims].[FworkCode] is not null then 'true' else 'false' end as [@FrameworkAimLookup],
										[LearningDelivery_LARS_LearningDelivery].[FrameworkCommonComponent] as [@FrameworkCommonComponent],
										case when [LearningDelivery_LARS_LearningDelivery_LARS_FrameworkCmnComp].[LearnAimRef] is not null then 'true' else 'false' end as [@FrameworkCommonLookup],
										[LARS_FrameworkAims].[FrameworkComponentType] as [@FrameworkComponentType],
										[LearningDelivery_LARS_Framework_0_Pathway].[EffectiveTo] as [@FrameworkEffectiveTo],
										case when [LearningDelivery_LARS_Framework_No_Pathway].[FworkCode] is not null then 'true' else 'false' end as [@FrameworkLookup],
										[LearningDelivery_LARS_Framework].[EffectiveTo] as [@FrameworkPathwayEffectiveTo],
										case when [LearningDelivery_LARS_Framework].[FworkCode] is not null then 'true' else 'false' end as [@FrameworkPathwayLookup],
										[LearningDelivery].[FundModel] as [@FundModel],
										[LearningDelivery].[FworkCode] as [@FworkCode],
										case when [LARS_LearningDeliveryCategory_TopMostCategory].[CategoryRef] is not null then 'true' else 'false' end as [@LARS_CategoryRef9],
										[LearningDelivery_LARS_LearningDelivery].[EnglPrscID] as [@LARS_EnglPrscID],
										[LearningDelivery_LARS_LearningDelivery].[LearningDeliveryGenre] as [@LARS_LearningDeliveryGenre],
										[LearningDelivery_LARS_LearningDelivery].[LearnDirectClassSystemCode1] as [@LDCS1Code],
										[LearningDelivery_LARS_LearningDelivery].[LearnDirectClassSystemCode2] as [@LDCS2Code],
										[LearningDelivery_LARS_LearningDelivery].[LearnDirectClassSystemCode3] as [@LDCS3Code],
										[LearningDelivery].[LearnActEndDate] as [@LearnActEndDate],
										[LearningDelivery].[LearnAimRef] as [@LearnAimRef],
										case when [LearningDelivery_LARS_LearningDelivery].[LearnAimRef] is not null then 'true' else 'false' end as [@LearnAimRefLookup],
										[LearningDelivery_LARS_LearningDelivery].[LearnAimRefType] as [@LearnAimRefType],
										[LearningDelivery].[LearnPlanEndDate] as [@LearnPlanEndDate],
										[LearningDelivery].[LearnStartDate] as [@LearnStartDate],
										[LearningDelivery_LARS_LearningDelivery].[NotionalNVQLevelv2] as [@NotionalNVQLevelv2],
										[LearningDelivery].[OrigLearnStartDate] as [@OrigLearnStartDate],
										[LearningDelivery].[OtherFundAdj] as [@OtherFundAdj],
										[LearningDelivery].[Outcome] as [@Outcome],
										[LearningDelivery].[OutGrade] as [@OutGrade],
										[LearningDelivery].[PartnerUKPRN] as [@PartnerUKPRN],
										case when [Org_PartnerUKPRN].[UKPRN] is not null then 'true' else 'false' end as [@PartnerUKPRNLookup],
										[LearningDelivery].[PriorLearnFundAdj] as [@PriorLearnFundAdj],
										[LearningDelivery].[ProgType] as [@ProgType],
										[LearningDelivery].[PwayCode] as [@PwayCode],
										[LARS_Section96].[Section96ApprovalStatus] as [@Section96ApprovalStatus],
										[LARS_Section96].[Section96ReviewDate] as [@Section96ReviewDate],
										case when [LARS_Standard].[StandardCode] is not null then 'true' else 'false' end as [@StandardCodeLookup],
										[LARS_Standard].[EffectiveTo] as [@StandardEffectiveTo],
										[LearningDelivery].[StdCode] as [@StdCode],
										[LearningDelivery].[SWSupAimId] as [@SWSupAimId],
										case [LearningDelivery_LARS_LearningDelivery].[UnemployedOnly] when 1 then 'true' when 0 then 'false' end as [@UnemployedOnly],
										[LearningDelivery_LARS_LearningDelivery].[UnitType] as [@UnitType],
										[LearningDelivery].[WithdrawReason] as [@WithdrawReason],
										(
											select
												[LearningDeliveryFAM].[LearnDelFAMCode] as [@LearnDelFAMCode],
												[LearningDeliveryFAM].[LearnDelFAMDateFrom] as [@LearnDelFAMDateFrom],
												[LearningDeliveryFAM].[LearnDelFAMDateTo] as [@LearnDelFAMDateTo],
												[LearningDeliveryFAM].[LearnDelFAMType] as [@LearnDelFAMType]
											from
												[Input].[LearningDeliveryFAM]
											where
												[LearningDeliveryFAM].[LearningDelivery_Id] = [LearningDelivery].[LearningDelivery_Id]
											for xml path ('LearningDeliveryFAM'), type
										),
										(
											select
												[LearningDeliveryHE].[DOMICILE] as [@DOMICILE],
												[LearningDeliveryHE].[ELQ] as [@ELQ],
												[LearningDeliveryHE].[FUNDCOMP] as [@FUNDCOMP],
												[LearningDeliveryHE].[FUNDLEV] as [@FUNDLEV],
												[LearningDeliveryHE].[GROSSFEE] as [@GROSSFEE],
												[LearningDeliveryHE].[HEPostCode] as [@HEPostCode],
												case when [Postcodes].[Postcode] is not null then 'true' else 'false' end as [@HEPostCodeLookup],
												[LearningDeliveryHE].[MODESTUD] as [@MODESTUD],
												[LearningDeliveryHE].[MSTUFEE] as [@MSTUFEE],
												[LearningDeliveryHE].[NETFEE] as [@NETFEE],
												[LearningDeliveryHE].[NUMHUS] as [@NUMHUS],
												[LearningDeliveryHE].[PCFLDCS] as [@PCFLDCS],
												[LearningDeliveryHE].[PCOLAB] as [@PCOLAB],
												[LearningDeliveryHE].[PCSLDCS] as [@PCSLDCS],
												[LearningDeliveryHE].[PCTLDCS] as [@PCTLDCS],
												[LearningDeliveryHE].[QUALENT3] as [@QUALENT3],
												[LearningDeliveryHE].[SEC] as [@SEC],
												[LearningDeliveryHE].[SOC2000] as [@SOC2000],
												[LearningDeliveryHE].[SPECFEE] as [@SPECFEE],
												[LearningDeliveryHE].[SSN] as [@SSN],
												[LearningDeliveryHE].[STULOAD] as [@STULOAD],
												[LearningDeliveryHE].[TYPEYR] as [@TYPEYR],
												[LearningDeliveryHE].[UCASAPPID] as [@UCASAPPID]
											from
												[Input].[LearningDeliveryHE]
												left join [$(Postcodes)].[$(Postcodes_Schema)].[Postcodes]
													on [Postcodes].[Postcode]=[LearningDeliveryHE].[HEPostCode]
											where
												[LearningDeliveryHE].[LearningDelivery_Id] = [LearningDelivery].[LearningDelivery_Id]
											for xml path ('LearningDeliveryHE'), type
										),
										(
											select
												[ProviderSpecDeliveryMonitoring].[ProvSpecDelMon] as [@ProvSpecDelMon],
												[ProviderSpecDeliveryMonitoring].[ProvSpecDelMonOccur] as [@ProvSpecDelMonOccur]
											from
												[Input].[ProviderSpecDeliveryMonitoring]
											where
												[ProviderSpecDeliveryMonitoring].[LearningDelivery_Id] = [LearningDelivery].[LearningDelivery_Id]
											for xml path ('ProviderSpecDeliveryMonitoring'), type
										),
										(
											select
												[LARS_Validity].[ValidityCategory] as [@ValidityCategory],
												[LARS_Validity].[EndDate] as [@ValidityEndDate],
												[LARS_Validity].[LastNewStartDate] as [@ValidityLastNewStartDate],
												[LARS_Validity].[StartDate] as [@ValidityStartDate]
											from
												[$(LARS)].[$(LARS_Schema)].[LARS_Validity]
											where
												[LARS_Validity].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
											for xml path ('LearningDeliveryLARSValidity'), type
										),
										(
											select
												[LearningDeliveryWorkPlacement].[WorkPlaceEmpId] as [@WorkPlaceEmpId],
												case when [Employers].[URN] is not null then 'true' else 'false' end as [@WorkPlaceEmpIdLookup],
												[LearningDeliveryWorkPlacement].[WorkPlaceEndDate] as [@WorkPlaceEndDate],
												[LearningDeliveryWorkPlacement].[WorkPlaceMode] as [@WorkPlaceMode],
												[LearningDeliveryWorkPlacement].[WorkPlaceStartDate] as [@WorkPlaceStartDate]
											from
												[Input].[LearningDeliveryWorkPlacement]
												left join [$(EDRS)].[$(EDRS_Schema)].[Employers]
													on [Employers].[URN]=[LearningDeliveryWorkPlacement].[WorkPlaceEmpId]
											where
												[LearningDeliveryWorkPlacement].[LearningDelivery_Id] = [LearningDelivery].[LearningDelivery_Id]
											for xml path ('LearningDeliveryWorkPlacement'), type
										),
										(
											select
												[TrailblazerApprenticeshipFinancialRecord].[TBFinAmount] as [@TBFinAmount],
												[TrailblazerApprenticeshipFinancialRecord].[TBFinCode] as [@TBFinCode],
												[TrailblazerApprenticeshipFinancialRecord].[TBFinDate] as [@TBFinDate],
												[TrailblazerApprenticeshipFinancialRecord].[TBFinType] as [@TBFinType]
											from
												[Input].[TrailblazerApprenticeshipFinancialRecord]
											where
												[TrailblazerApprenticeshipFinancialRecord].[LearningDelivery_Id] = [LearningDelivery].[LearningDelivery_Id]
											for xml path ('TrailblazerApprenticeshipFinancialRecord'), type
										),
										(
											select
												case [LARS_AnnualValue].[BasicSkills] when 1 then 'true' when 0 then 'false' end as [@BasicSkills],
												[LARS_AnnualValue].[FullLevel2EntitlementCategory] as [@FullLevel2EntitlementCategory],
												[LARS_AnnualValue].[FullLevel2Percent] as [@FullLevel2Percent],
												[LARS_AnnualValue].[FullLevel3EntitlementCategory] as [@FullLevel3EntitlementCategory],
												[LARS_AnnualValue].[FullLevel3Percent] as [@FullLevel3Percent],
												[LARS_AnnualValue].[BasicSkillsType] as [@LearnDelAnnValBasicSkillsTypeCode],
												[LARS_AnnualValue].[EffectiveFrom] as [@LearnDelAnnValDateFrom],
												[LARS_AnnualValue].[EffectiveTo] as [@LearnDelAnnValDateTo]
											from
												[$(LARS)].[$(LARS_Schema)].[LARS_AnnualValue]
											where
												[LARS_AnnualValue].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
											for xml path ('LearningDeliveryAnnualValue'), type
										),
										(
											select
												[LearningDelivery_LARS_LearningDeliveryCategory_LARS_LearningDeliveryCategory_Children].[CategoryRef] as [@LARSCategoryRef],
												[LearningDelivery_LARS_LearningDeliveryCategory_LARS_LearningDeliveryCategory_Children].[ParentCategoryRef] as [@ParentLARSCategoryRef],
												[LearningDelivery_LARS_LearningDeliveryCategory_LARS_LearningDeliveryCategory_Children].[RootCategoryRef] as [@TopLevelLARSCategoryRef]
											from
												(
													select
														[LARS_LearningDeliveryCategory].[CategoryRef],
														[LARS_LearningDeliveryCategory_Children].[ParentCategoryRef],
														[LARS_LearningDeliveryCategory_Children].[RootCategoryRef],
														[LARS_LearningDeliveryCategory].[LearnAimRef]
													from
														[$(LARS)].[$(LARS_Schema)].[LARS_LearningDeliveryCategory_Children]
														inner join [$(LARS)].[$(LARS_Schema)].[LARS_LearningDeliveryCategory]
															on [LARS_LearningDeliveryCategory_Children].[CategoryRef]=[LARS_LearningDeliveryCategory].[CategoryRef]
												)  as LearningDelivery_LARS_LearningDeliveryCategory_LARS_LearningDeliveryCategory_Children
											where
												[LearningDelivery_LARS_LearningDeliveryCategory_LARS_LearningDeliveryCategory_Children].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
											for xml path ('LearningDeliveryLARSCategory'), type
										)
									from
										[Input].[LearningDelivery]
										left join [$(LARS)].[$(LARS_Schema)].[LARS_LearningDelivery] as [LearningDelivery_LARS_LearningDelivery]
											on [LearningDelivery_LARS_LearningDelivery].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
										left join [$(FCT)].[$(FCT_Schema)].[vw_ContractAllocation]
											on [vw_ContractAllocation].[contractAllocationNumber]=[LearningDelivery].[ConRefNumber]
										left join [$(Postcodes)].[$(Postcodes_Schema)].[Postcodes]
											on [Postcodes].[Postcode]=[LearningDelivery].[DelLocPostCode]
										left join [$(LARS)].[$(LARS_Schema)].[LARS_FrameworkAims]
											on [LARS_FrameworkAims].[FworkCode]=[LearningDelivery].[FworkCode]
											and [LARS_FrameworkAims].[ProgType]=[LearningDelivery].[ProgType]
											and [LARS_FrameworkAims].[PwayCode]=[LearningDelivery].[PwayCode]
											and [LARS_FrameworkAims].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
										left join [$(LARS)].[$(LARS_Schema)].[LARS_Framework] as [LearningDelivery_LARS_Framework_0_Pathway]
											on [LearningDelivery_LARS_Framework_0_Pathway].[FworkCode]=[LearningDelivery].[FworkCode]
											and [LearningDelivery_LARS_Framework_0_Pathway].[ProgType]=[LearningDelivery].[ProgType]
											and [LearningDelivery_LARS_Framework_0_Pathway].[PwayCode]=0
										left join
											(
												select distinct
														[LARS_Framework].[FworkCode],
														[LARS_Framework].[ProgType]
												from
													[$(LARS)].[$(LARS_Schema)].[LARS_Framework]
											) as [LearningDelivery_LARS_Framework_No_Pathway]
											on [LearningDelivery_LARS_Framework_No_Pathway].[FworkCode]=[LearningDelivery].[FworkCode]
											and [LearningDelivery_LARS_Framework_No_Pathway].[ProgType]=[LearningDelivery].[ProgType]
										left join [$(LARS)].[$(LARS_Schema)].[LARS_Framework] as [LearningDelivery_LARS_Framework]
											on [LearningDelivery_LARS_Framework].[FworkCode]=[LearningDelivery].[FworkCode]
											and [LearningDelivery_LARS_Framework].[ProgType]=[LearningDelivery].[ProgType]
											and [LearningDelivery_LARS_Framework].[PwayCode]=[LearningDelivery].[PwayCode]
										left join [$(LARS)].[$(LARS_Schema)].[LARS_LearningDeliveryCategory_TopMostCategory]
											on [LARS_LearningDeliveryCategory_TopMostCategory].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
											and [LARS_LearningDeliveryCategory_TopMostCategory].[CategoryRef]=9
										left join [$(Org)].[$(Org_Schema)].[Org_PartnerUKPRN]
											on [Org_PartnerUKPRN].[UKPRN]=[LearningDelivery].[PartnerUKPRN]
										left join [$(LARS)].[$(LARS_Schema)].[LARS_Section96]
											on [LARS_Section96].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
										left join [$(LARS)].[$(LARS_Schema)].[LARS_Standard]
											on [LARS_Standard].[StandardCode]=[LearningDelivery].[StdCode]
										left join
											(
												select
													[LARS_LearningDelivery].[LearnAimRef],
													[LARS_FrameworkCmnComp].[FworkCode],
													[LARS_FrameworkCmnComp].[ProgType],
													[LARS_FrameworkCmnComp].[PwayCode],
													[LARS_FrameworkCmnComp].[CommonComponent]
												from
													[$(LARS)].[$(LARS_Schema)].[LARS_FrameworkCmnComp]
													inner join [$(LARS)].[$(LARS_Schema)].[LARS_LearningDelivery]
														on [LARS_FrameworkCmnComp].[CommonComponent]=[LARS_LearningDelivery].[FrameworkCommonComponent]
											)  as LearningDelivery_LARS_LearningDelivery_LARS_FrameworkCmnComp
												on [LearningDelivery_LARS_LearningDelivery_LARS_FrameworkCmnComp].[LearnAimRef]=[LearningDelivery].[LearnAimRef]
												and [LearningDelivery_LARS_LearningDelivery_LARS_FrameworkCmnComp].[FworkCode]=[LearningDelivery].[FworkCode]
												and [LearningDelivery_LARS_LearningDelivery_LARS_FrameworkCmnComp].[ProgType]=[LearningDelivery].[ProgType]
												and [LearningDelivery_LARS_LearningDelivery_LARS_FrameworkCmnComp].[PwayCode]=[LearningDelivery].[PwayCode]
									where
										[LearningDelivery].[Learner_Id] = [Learner].[Learner_Id]
									for xml path ('LearningDelivery'), type
								),
								(
									select
										[LearnerFAM].[LearnFAMCode] as [@LearnFAMCode],
										[LearnerFAM].[LearnFAMType] as [@LearnFAMType]
									from
										[Input].[LearnerFAM]
									where
										[LearnerFAM].[Learner_Id] = [Learner].[Learner_Id]
									for xml path ('LearnerFAM'), type
								),
								(
									select
										[LearnerEmploymentStatus].[DateEmpStatApp] as [@DateEmpStatApp],
										[LearnerEmploymentStatus].[EmpId] as [@EmpId],
										case when [Employers].[URN] is not null then 'true' else 'false' end as [@EmpIdLookup],
										[LearnerEmploymentStatus].[EmpStat] as [@EmpStat],
										(
											select
												[EmploymentStatusMonitoring].[ESMCode] as [@ESMCode],
												[EmploymentStatusMonitoring].[ESMType] as [@ESMType]
											from
												[Input].[EmploymentStatusMonitoring]
											where
												[EmploymentStatusMonitoring].[LearnerEmploymentStatus_Id] = [LearnerEmploymentStatus].[LearnerEmploymentStatus_Id]
											for xml path ('EmploymentStatusMonitoring'), type
										)
									from
										[Input].[LearnerEmploymentStatus]
										left join [$(EDRS)].[$(EDRS_Schema)].[Employers]
											on [Employers].[URN]=[LearnerEmploymentStatus].[EmpId]
									where
										[LearnerEmploymentStatus].[Learner_Id] = [Learner].[Learner_Id]
									for xml path ('LearnerEmploymentStatus'), type
								),
								(
									select
										[LearnerContact].[ContType] as [@ContType],
										[LearnerContact].[LocType] as [@LocType],
										[LearnerContact].[PostCode] as [@Postcode],
										case when [Postcodes].[Postcode] is not null then 'true' else 'false' end as [@PostcodeLookup],
										(
											select
												[PostAdd].[AddLine1] as [@AddLine1]
											from
												[Input].[PostAdd]
											where
												[PostAdd].[LearnerContact_Id] = [LearnerContact].[LearnerContact_Id]
											for xml path ('PostAdd'), type
										)
									from
										[Input].[LearnerContact]
										left join [$(Postcodes)].[$(Postcodes_Schema)].[Postcodes]
											on [Postcodes].[Postcode]=[LearnerContact].[PostCode]
									where
										[LearnerContact].[Learner_Id] = [Learner].[Learner_Id]
									for xml path ('LearnerContact'), type
								),
								(
									select
										[ContactPreference].[ContPrefCode] as [@ContPrefCode],
										[ContactPreference].[ContPrefType] as [@ContPrefType]
									from
										[Input].[ContactPreference]
									where
										[ContactPreference].[Learner_Id] = [Learner].[Learner_Id]
									for xml path ('ContactPreference'), type
								),
								(
									select
										[LLDDandHealthProblem].[LLDDCat] as [@LLDDCat],
										[LLDDandHealthProblem].[PrimaryLLDD] as [@PrimaryLLDD]
									from
										[Input].[LLDDandHealthProblem]
									where
										[LLDDandHealthProblem].[Learner_Id] = [Learner].[Learner_Id]
									for xml path ('LLDDandHealthProblem'), type
								),
								(
									select
										[LearnerHE].[TTACCOM] as [@TTACCOM],
										[LearnerHE].[UCASPERID] as [@UCASPERID],
										(
											select
												[LearnerHEFinancialSupport].[FINTYPE] as [@FINTYPE]
											from
												[Input].[LearnerHEFinancialSupport]
											where
												[LearnerHEFinancialSupport].[LearnerHE_Id] = [LearnerHE].[LearnerHE_Id]
											for xml path ('LearnerHEFinancialSupport'), type
										)
									from
										[Input].[LearnerHE]
									where
										[LearnerHE].[Learner_Id] = [Learner].[Learner_Id]
									for xml path ('LearnerHE'), type
								),
								(
									select
										[ProviderSpecLearnerMonitoring].[ProvSpecLearnMonOccur] as [@ProvSpecLearnMonOccur]
									from
										[Input].[ProviderSpecLearnerMonitoring]
									where
										[ProviderSpecLearnerMonitoring].[Learner_Id] = [Learner].[Learner_Id]
									for xml path ('ProviderSpecLearnerMonitoring'), type
								),
								(
									select
										[LearnerDestinationandProgression].[LearnRefNumber] as [@DP_LearnRefNumber],
										[LearnerDestinationandProgression].[ULN] as [@DP_ULN],
										(
											select
												[DPOutcome].[OutCode] as [@OutCode],
												[DPOutcome].[OutStartDate] as [@OutStartDate],
												[DPOutcome].[OutType] as [@OutType]
											from
												[Input].[DPOutcome]
											where
												[DPOutcome].[LearnerDestinationAndProgression_Id] = [LearnerDestinationandProgression].[LearnerDestinationAndProgression_Id]
											for xml path ('DPOutcome'), type
										)
									from
										[Input].[LearnerDestinationandProgression]
									where
										 [LearnerDestinationandProgression].[LearnRefNumber]=[Learner].[LearnRefNumber]
									for xml path ('LearnerDestinationAndProgression'), type
								)
							from
								[Input].[Learner]
								left join [$(Org)].[$(Org_Schema)].[Org_PartnerUKPRN]
									on [Org_PartnerUKPRN].[UKPRN]=[Learner].[PrevUKPRN]
								left join [$(ULN)].[$(ULN_Schema)].[UniqueLearnerNumbers]
									on [UniqueLearnerNumbers].[ULN]=[Learner].[ULN]
							where
								[Learner].[LearnRefNumber] = [ControllingTable].[LearnRefNumber]
							for xml path ('Learner'), type
						)
					from
						[Input].[LearningProvider]
cross join [$(LARS)].[$(LARS_Schema)].[LARS_Current_Version]	
							cross join [Input].[CollectionDetails]
							cross join [$(Org)].[$(Org_Schema)].[Org_Current_Version]
							left join
							(
								select distinct
										[vw_ContractValidation].[UKPRN],
										[vw_ContractValidation].[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as [LearningProvider_vw_ContractValidation_1618APPS1617]
							on [LearningProvider_vw_ContractValidation_1618APPS1617].[UKPRN]=[LearningProvider].[UKPRN]
							and [LearningProvider_vw_ContractValidation_1618APPS1617].[fundingStreamPeriodCode]='16-18APPS1617'
						left join
							(
								select distinct
										[vw_ContractValidation].[UKPRN],
										[vw_ContractValidation].[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as [LearningProvider_vw_ContractValidation_ALLB1617]
							on [LearningProvider_vw_ContractValidation_ALLB1617].[UKPRN]=[LearningProvider].[UKPRN]
							and [LearningProvider_vw_ContractValidation_ALLB1617].[fundingStreamPeriodCode]='ALLB1617'
						left join
							(
								select distinct
										[vw_ContractValidation].[UKPRN],
										[vw_ContractValidation].[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as [LearningProvider_vw_ContractValidation_ALLBC1617]
							on [LearningProvider_vw_ContractValidation_ALLBC1617].[UKPRN]=[LearningProvider].[UKPRN]
							and [LearningProvider_vw_ContractValidation_ALLBC1617].[fundingStreamPeriodCode]='ALLBC1617'
						left join
							(
								select distinct
										[vw_ContractValidation].[UKPRN],
										[vw_ContractValidation].[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as [LearningProvider_vw_ContractValidation_AAC1617]
							on [LearningProvider_vw_ContractValidation_AAC1617].[UKPRN]=[LearningProvider].[UKPRN]
							and [LearningProvider_vw_ContractValidation_AAC1617].[fundingStreamPeriodCode]='AAC1617'
						left join
							(
								select distinct
										[vw_ContractValidation].[UKPRN],
										[vw_ContractValidation].[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as [LearningProvider_vw_ContractValidation_AATO1617]
							on [LearningProvider_vw_ContractValidation_AATO1617].[UKPRN]=[LearningProvider].[UKPRN]
							and [LearningProvider_vw_ContractValidation_AATO1617].[fundingStreamPeriodCode]='AATO1617'
						left join
							(
								select distinct
										[vw_ContractValidation].[UKPRN],
										[vw_ContractValidation].[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as [LearningProvider_vw_ContractValidation_AEBC1617]
							on [LearningProvider_vw_ContractValidation_AEBC1617].[UKPRN]=[LearningProvider].[UKPRN]
							and [LearningProvider_vw_ContractValidation_AEBC1617].[fundingStreamPeriodCode]='AEBC1617'
						left join
							(
								select distinct
										[vw_ContractValidation].[UKPRN],
										[vw_ContractValidation].[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as [LearningProvider_vw_ContractValidation_AEBTO-TOL1617]
							on [LearningProvider_vw_ContractValidation_AEBTO-TOL1617].[UKPRN]=[LearningProvider].[UKPRN]
							and [LearningProvider_vw_ContractValidation_AEBTO-TOL1617].[fundingStreamPeriodCode]='AEBTO-TOL1617'
						left join
							(
								select distinct
										[vw_ContractValidation].[UKPRN],
										[vw_ContractValidation].[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as [LearningProvider_vw_ContractValidation_ESF1420]
							on [LearningProvider_vw_ContractValidation_ESF1420].[UKPRN]=[LearningProvider].[UKPRN]
							and [LearningProvider_vw_ContractValidation_ESF1420].[fundingStreamPeriodCode]='ESF1420'
						left join
							(
								select distinct
										[vw_ContractValidation].[UKPRN],
										[vw_ContractValidation].[fundingStreamPeriodCode]
								from
									[$(FCT)].[$(FCT_Schema)].[vw_ContractValidation]
							) as [LearningProvider_vw_ContractValidation_OLASS1617]
							on [LearningProvider_vw_ContractValidation_OLASS1617].[UKPRN]=[LearningProvider].[UKPRN]
							and [LearningProvider_vw_ContractValidation_OLASS1617].[fundingStreamPeriodCode]='OLASS1617'
						left join [$(Org)].[$(Org_Schema)].[Org_Details]
							on [Org_Details].[UKPRN]=[LearningProvider].[UKPRN]
					for xml path ('global'), type
				)
			)
		from
			[Input].[Learner] ControllingTable
		where
			[ControllingTable].[Learner_Id] in (select Learner_Id from dbo.ValidLearners)
	end
GO
if object_id('[Rulebase].[VAL_Insert_global]','p') is not null
	drop procedure [Rulebase].[VAL_Insert_global]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 30 March 2017 15:11
-- Profile: Test Harness Validation
-- Rulebase Version: ILR Validation Learner 1617, Version 1617.06
-- =====================================================================================================

create procedure [Rulebase].[VAL_Insert_global]
	(
		@EmployerVersion varchar(50),
		@LARSVersion varchar(50),
		@OrgVersion varchar(50),
		@PostcodeVersion varchar(50),
		@RulebaseVersion varchar(10),
		@UKPRN int
	)
as
	begin
		set nocount on
		insert into
			[Rulebase].[VAL_global]
		values (
			@UKPRN,
			@EmployerVersion,
			@LARSVersion,
			@OrgVersion,
			@PostcodeVersion,
			@RulebaseVersion
		)
	end
go
if object_id('[Rulebase].[VAL_Insert_Learner]','p') is not null
	drop procedure [Rulebase].[VAL_Insert_Learner]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 30 March 2017 15:11
-- Profile: Test Harness Validation
-- Rulebase Version: ILR Validation Learner 1617, Version 1617.06
-- =====================================================================================================

create procedure [Rulebase].[VAL_Insert_Learner]
	(
		@LearnRefNumber varchar(12)
	)
as
	begin
		set nocount on
	end
go
if object_id('[Rulebase].[VAL_Insert_LearningDelivery]','p') is not null
	drop procedure [Rulebase].[VAL_Insert_LearningDelivery]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 30 March 2017 15:11
-- Profile: Test Harness Validation
-- Rulebase Version: ILR Validation Learner 1617, Version 1617.06
-- =====================================================================================================

create procedure [Rulebase].[VAL_Insert_LearningDelivery]
	(
		@LearnRefNumber varchar(12),
		@AimSeqNumber int
	)
as
	begin
		set nocount on
	end
go
if object_id('[Rulebase].[VAL_Insert_ValidationError]','p') is not null
	drop procedure [Rulebase].[VAL_Insert_ValidationError]
GO
-- =====================================================================================================
-- Generated by Data Dictionary Version 1.0.0.0
-- Date: 30 March 2017 15:11
-- Profile: Test Harness Validation
-- Rulebase Version: ILR Validation Learner 1617, Version 1617.06
-- =====================================================================================================

create procedure [Rulebase].[VAL_Insert_ValidationError]
	--(
	--	@AimSeqNumber bigint,
	@ErrorString varchar(2000)--,
	--	@FieldValues varchar(2000),
	--	@LearnRefNumber varchar(100),
	--	@RuleId varchar(50)
	--)
as
	begin
		set nocount on
		declare @xml xml = convert(xml,'<Values><value>' + replace(replace(@ErrorString,'&','&amp;'),'|', '</value><value>') + '</value></Values>')
		declare @LearnRefNumber varchar(100) = @xml.value('/Values[1]/value[1]','varchar(100)')
		declare @AimSeqNumber varchar(18) = @xml.value('/Values[1]/value[2]','varchar(18)')
		declare @RuleId varchar(50) = @xml.value('/Values[1]/value[3]','varchar(50)')
		declare @FieldValues varchar(2000) = @xml.value('/Values[1]/value[4]','varchar(2000)')
		insert into
			[Rulebase].[VAL_ValidationError]
		values (
			@AimSeqNumber,
			@ErrorString,
			@FieldValues,
			@LearnRefNumber,
			@RuleId
		)
	end
go
